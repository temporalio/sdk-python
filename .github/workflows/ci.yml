name: Continuous Integration
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  # Build and test the project
  build-lint-test:
    strategy:
      fail-fast: true
      matrix:
        python: ["3.7", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            python: 3.10
            docsTarget: true
            protoCheckTarget: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: "echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}, python: ${{ matrix.python }}"
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: temporalio/bridge
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      # Needed for tests since they use external server
      - uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - run: python -m pip install --upgrade wheel poetry poethepoet
      - run: poetry install --no-root
      - run: poe lint
      - run: poe build-develop
      - run: poe test -s -o log_cli_level=DEBUG

      # Confirm protos are already generated properly
      - name: Check generated protos
        if: ${{ matrix.protoCheckTarget }}
        run: |
          poe gen-protos
          poe format
          [[ -z $(git status --porcelain) ]] || (git status; echo "Protos changed"; exit 1)

      # Do docs stuff (only on one host)
      - name: Build API docs
        if: ${{ matrix.docsTarget }}
        run: poe gen-docs
      - name: Deploy prod API docs
        if: ${{ github.ref == 'refs/heads/main' && matrix.docsTarget }}
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=build/apidocs --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      - name: Deploy draft API docs
        if: ${{ github.ref != 'refs/heads/main' && matrix.docsTarget }}
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=build/apidocs
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  # Compile the binaries and upload artifacts
  compile-binaries:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            package-suffix: linux-amd64
          - os: macos-latest
            package-suffix: macos-amd64
          - os: windows-latest
            package-suffix: windows-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: temporalio/bridge
      - uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      # Needed for tests since they use external server
      - uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - run: python -m pip install --upgrade wheel poetry poethepoet
      - run: poetry install --no-root
      - run: poetry build
      - run: poe fix-wheel
      - run: poe test-dist-single
      - uses: actions/upload-artifact@v2
        with:
          name: packages-${{ matrix.package-suffix }}
          path: dist

