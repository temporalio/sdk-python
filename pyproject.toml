[project]
name = "temporalio"
version = "1.10.0"
description = "Temporal.io Python SDK"
authors = [{ name = "Temporal Technologies Inc", email = "sdk@temporal.io" }]
requires-python = "~=3.9"
readme = "README.md"
license = { file = "LICENSE" }
keywords = [
    "temporal",
    "workflow",
]
dependencies = [
    "protobuf>=3.20",
    "python-dateutil>=2.8.2,<3 ; python_version < '3.11'",
    "types-protobuf>=3.20",
    "typing-extensions>=4.2.0,<5",
]

[project.optional-dependencies]
grpc = ["grpcio>=1.48.2,<2"]
opentelemetry = [
    "opentelemetry-api>=1.11.1,<2",
    "opentelemetry-sdk>=1.11.1,<2",
]
pydantic = ["pydantic>=2.0.0,<3"]

[project.urls]
Homepage = "https://github.com/temporalio/sdk-python"
Repository = "https://github.com/temporalio/sdk-python"
Documentation = "https://docs.temporal.io/docs/python"
"Bug Tracker" = "https://github.com/temporalio/sdk-python/issues"

[dependency-groups]
dev = [
    "cibuildwheel>=2.22.0,<3",
    "grpcio-tools>=1.48.2,<2",
    "mypy==1.4.1",
    "mypy-protobuf>=3.3.0,<4",
    "psutil>=5.9.3,<6",
    "pydocstyle>=6.3.0,<7",
    "pydoctor>=24.11.1,<25",
    "pyright==1.1.377",
    "pytest~=7.4",
    "pytest-asyncio>=0.21,<0.22",
    "pytest-timeout~=2.2",
    "ruff>=0.5.0,<0.6",
    "toml>=0.10.2,<0.11",
    "twine>=4.0.1,<5",
    "ruff>=0.5.0,<0.6",
    "maturin>=1.8.2",
]

[tool.poe.tasks]
build-develop = "uv run maturin develop --uv"
build-develop-with-release = { cmd = "uv run maturin develop --release --uv" }
format = [{cmd = "uv run ruff check --fix"}, {cmd = "uv run ruff format"}, ]
gen-docs = "uv run python scripts/gen_docs.py"
gen-protos = "uv run python scripts/gen_protos.py"
lint = [
  {cmd = "uv run ruff check"},
  {cmd = "uv run ruff format --check"},
  {ref = "lint-types-mypy"},
  {ref = "lint-types-pyright"},
  {ref = "lint-docs"},
]
bridge-lint = { cmd = "cargo clippy -- -D warnings", cwd = "temporalio/bridge" }
# TODO(cretz): Why does pydocstyle complain about @overload missing docs after
# https://github.com/PyCQA/pydocstyle/pull/511?
lint-docs = "uv run pydocstyle --ignore-decorators=overload"
lint-types-mypy = "uv run mypy --namespace-packages --check-untyped-defs ."
lint-types-pyright = "uv run pyright"
run-bench = "uv run python scripts/run_bench.py"
test = "uv run pytest"

[tool.ruff]
target-version = "py39"
exclude = ["*_pb2.py", "*_pb2_grpc.py"]
lint.ignore = ["E741"]  # we occasionally use e.g. O as a type var and l as a loop variable


[tool.cibuildwheel]
before-all = "pip install protoc-wheel-0"
build = "cp39-win_amd64 cp39-manylinux_x86_64 cp39-manylinux_aarch64 cp39-macosx_x86_64 cp39-macosx_arm64"
build-verbosity = "1"

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.12" }

[tool.cibuildwheel.linux]
before-all = "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
before-build = "pip install protoc-wheel-0"
environment = { PATH = "$PATH:$HOME/.cargo/bin", CARGO_NET_GIT_FETCH_WITH_CLI = "true" }

[tool.mypy]
ignore_missing_imports = true
exclude = [
  # Ignore generated code
  'temporalio/api',
  'temporalio/bridge/proto'
]

[tool.pydocstyle]
convention = "google"
# https://github.com/PyCQA/pydocstyle/issues/363#issuecomment-625563088
match_dir = "^(?!(docs|scripts|tests|api|proto|\\.)).*"
add_ignore = [
  # We like to wrap at a certain number of chars, even long summary sentences.
  # https://github.com/PyCQA/pydocstyle/issues/184
  "D205", "D415"
]

[tool.pydoctor]
add-package = ["temporalio"]
docformat = "google"
html-output = "build/apidocs"
html-viewsource-base = "https://github.com/temporalio/sdk-python/tree/main"
intersphinx = [
  "https://docs.python.org/3/objects.inv",
  "https://googleapis.dev/python/protobuf/latest/objects.inv",
  "https://opentelemetry-python.readthedocs.io/en/latest/objects.inv",
]
privacy = [
  "PRIVATE:temporalio.bridge",
  "PRIVATE:temporalio.types",
  "PRIVATE:temporalio.worker.workflow_sandbox.restrictions",
  "PRIVATE:temporalio.worker.workflow_sandbox.runner",
  "HIDDEN:temporalio.testing.activity",
  "HIDDEN:temporalio.testing.workflow",
  "HIDDEN:temporalio.worker.activity",
  "HIDDEN:temporalio.worker.interceptor",
  "HIDDEN:temporalio.worker.worker",
  "HIDDEN:temporalio.worker.workflow",
  "HIDDEN:temporalio.worker.workflow_instance",
  "HIDDEN:temporalio.worker.workflow_sandbox.importer",
  "HIDDEN:temporalio.worker.workflow_sandbox.in_sandbox",
  "HIDDEN:**.*_pb2*",
]
project-name = "Temporal Python"
sidebar-expand-depth = 2

[tool.pyright]
include = ["temporalio", "tests"]
exclude = [
  "temporalio/api",
  "temporalio/bridge/proto",
  "tests/worker/workflow_sandbox/testmodules/proto",
  "temporalio/bridge/worker.py",
  "temporalio/contrib/opentelemetry.py",
  "temporalio/converter.py",
  "temporalio/testing/_workflow.py",
  "temporalio/worker/_activity.py",
  "temporalio/worker/_replayer.py",
  "temporalio/worker/_worker.py",
  "temporalio/worker/workflow_sandbox/_importer.py",
  "temporalio/worker/workflow_sandbox/_restrictions.py",
  "temporalio/workflow.py",
  "tests/api/test_grpc_stub.py",
  "tests/conftest.py",
  "tests/contrib/test_opentelemetry.py",
  "tests/test_converter.py",
  "tests/test_service.py",
  "tests/test_workflow.py",
  "tests/worker/test_activity.py",
  "tests/worker/test_workflow.py",
  "tests/worker/workflow_sandbox/test_importer.py",
  "tests/worker/workflow_sandbox/test_restrictions.py",
  # TODO: these pass locally but fail in CI with
  # error: Import "temporalio.bridge.temporal_sdk_bridge" could not be resolved
  "temporalio/bridge/client.py",
  "temporalio/bridge/metric.py",
  "temporalio/bridge/runtime.py",
  "temporalio/bridge/testing.py",
]

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
manifest-path = "temporalio/bridge/Cargo.toml"
module-name = "temporalio.bridge.temporal_sdk_bridge"
python-packages = ["temporalio"]
include = ["LICENSE"]
exclude = [
    "temporalio/bridge/target/**/*",
]

[tool.uv]
# Prevent uv commands from building the package by default
package = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
# Do not use log_cli since this shows logging for all tests, not just the ones
# that failed. Instead, show all logs for failed tests at the end.
log_level = "DEBUG"
log_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
testpaths = ["tests"]
timeout = 600
timeout_func_only = true
filterwarnings = [
  "error::temporalio.workflow.UnfinishedUpdateHandlersWarning",
  "error::temporalio.workflow.UnfinishedSignalHandlersWarning",
  "ignore::pytest.PytestDeprecationWarning",
  "ignore::DeprecationWarning",
]

