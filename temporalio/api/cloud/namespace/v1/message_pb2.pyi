"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import sys

import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CertificateFilterSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMMON_NAME_FIELD_NUMBER: builtins.int
    ORGANIZATION_FIELD_NUMBER: builtins.int
    ORGANIZATIONAL_UNIT_FIELD_NUMBER: builtins.int
    SUBJECT_ALTERNATIVE_NAME_FIELD_NUMBER: builtins.int
    common_name: builtins.str
    """The common_name in the certificate.
    Optional, default is empty.
    """
    organization: builtins.str
    """The organization in the certificate.
    Optional, default is empty.
    """
    organizational_unit: builtins.str
    """The organizational_unit in the certificate.
    Optional, default is empty.
    """
    subject_alternative_name: builtins.str
    """The subject_alternative_name in the certificate.
    Optional, default is empty.
    """
    def __init__(
        self,
        *,
        common_name: builtins.str = ...,
        organization: builtins.str = ...,
        organizational_unit: builtins.str = ...,
        subject_alternative_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "common_name",
            b"common_name",
            "organization",
            b"organization",
            "organizational_unit",
            b"organizational_unit",
            "subject_alternative_name",
            b"subject_alternative_name",
        ],
    ) -> None: ...

global___CertificateFilterSpec = CertificateFilterSpec

class MtlsAuthSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCEPTED_CLIENT_CA_FIELD_NUMBER: builtins.int
    CERTIFICATE_FILTERS_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    accepted_client_ca: builtins.str
    """The base64 encoded ca cert(s) in PEM format that the clients can use for authentication and authorization.
    This must only be one value, but the CA can have a chain.

    (-- api-linter: core::0140::base64=disabled --)
    """
    @property
    def certificate_filters(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___CertificateFilterSpec
    ]:
        """Certificate filters which, if specified, only allow connections from client certificates whose distinguished name properties match at least one of the filters.
        This allows limiting access to specific end-entity certificates.
        Optional, default is empty.
        """
    enabled: builtins.bool
    """Flag to enable mTLS auth (default: disabled).
    Note: disabling mTLS auth will cause existing mTLS connections to fail.
    temporal:versioning:min_version=2024-05-13-00
    """
    def __init__(
        self,
        *,
        accepted_client_ca: builtins.str = ...,
        certificate_filters: collections.abc.Iterable[global___CertificateFilterSpec]
        | None = ...,
        enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "accepted_client_ca",
            b"accepted_client_ca",
            "certificate_filters",
            b"certificate_filters",
            "enabled",
            b"enabled",
        ],
    ) -> None: ...

global___MtlsAuthSpec = MtlsAuthSpec

class ApiKeyAuthSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    """Flag to enable API key auth (default: disabled).
    Note: disabling API key auth will cause existing API key connections to fail.
    """
    def __init__(
        self,
        *,
        enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["enabled", b"enabled"]
    ) -> None: ...

global___ApiKeyAuthSpec = ApiKeyAuthSpec

class CodecServerSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENDPOINT_FIELD_NUMBER: builtins.int
    PASS_ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    INCLUDE_CROSS_ORIGIN_CREDENTIALS_FIELD_NUMBER: builtins.int
    endpoint: builtins.str
    """The codec server endpoint."""
    pass_access_token: builtins.bool
    """Whether to pass the user access token with your endpoint."""
    include_cross_origin_credentials: builtins.bool
    """Whether to include cross-origin credentials."""
    def __init__(
        self,
        *,
        endpoint: builtins.str = ...,
        pass_access_token: builtins.bool = ...,
        include_cross_origin_credentials: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "endpoint",
            b"endpoint",
            "include_cross_origin_credentials",
            b"include_cross_origin_credentials",
            "pass_access_token",
            b"pass_access_token",
        ],
    ) -> None: ...

global___CodecServerSpec = CodecServerSpec

class NamespaceSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class CustomSearchAttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    REGIONS_FIELD_NUMBER: builtins.int
    RETENTION_DAYS_FIELD_NUMBER: builtins.int
    MTLS_AUTH_FIELD_NUMBER: builtins.int
    API_KEY_AUTH_FIELD_NUMBER: builtins.int
    CUSTOM_SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    CODEC_SERVER_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name to use for the namespace.
    This will create a namespace that's available at '<name>.<account>.tmprl.cloud:7233'.
    The name is immutable. Once set, it cannot be changed.
    """
    @property
    def regions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The ids of the regions where the namespace should be available.
        The GetRegions API can be used to get the list of valid region ids.
        Specifying more than one region makes the namespace "global", which is currently a preview only feature with restricted access.
        Please reach out to Temporal support for more information on global namespaces.
        When provisioned the global namespace will be active on the first region in the list and passive on the rest.
        Number of supported regions is 2.
        The regions is immutable. Once set, it cannot be changed.
        Example: ["aws-us-west-2"].
        """
    retention_days: builtins.int
    """The number of days the workflows data will be retained for.
    Changes to the retention period may impact your storage costs.
    Any changes to the retention period will be applied to all new running workflows.
    """
    @property
    def mtls_auth(self) -> global___MtlsAuthSpec:
        """The mTLS auth configuration for the namespace.
        If unspecified, mTLS will be disabled.
        """
    @property
    def api_key_auth(self) -> global___ApiKeyAuthSpec:
        """The API key auth configuration for the namespace.
        If unspecified, API keys will be disabled.
        temporal:versioning:min_version=2024-05-13-00
        """
    @property
    def custom_search_attributes(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """The custom search attributes to use for the namespace.
        The name of the attribute is the key and the type is the value.
        Supported attribute types: text, keyword, int, double, bool, datetime, keyword_list.
        NOTE: currently deleting a search attribute is not supported.
        Optional, default is empty.
        """
    @property
    def codec_server(self) -> global___CodecServerSpec:
        """Codec server spec used by UI to decode payloads for all users interacting with this namespace.
        Optional, default is unset.
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        regions: collections.abc.Iterable[builtins.str] | None = ...,
        retention_days: builtins.int = ...,
        mtls_auth: global___MtlsAuthSpec | None = ...,
        api_key_auth: global___ApiKeyAuthSpec | None = ...,
        custom_search_attributes: collections.abc.Mapping[builtins.str, builtins.str]
        | None = ...,
        codec_server: global___CodecServerSpec | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "api_key_auth",
            b"api_key_auth",
            "codec_server",
            b"codec_server",
            "mtls_auth",
            b"mtls_auth",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "api_key_auth",
            b"api_key_auth",
            "codec_server",
            b"codec_server",
            "custom_search_attributes",
            b"custom_search_attributes",
            "mtls_auth",
            b"mtls_auth",
            "name",
            b"name",
            "regions",
            b"regions",
            "retention_days",
            b"retention_days",
        ],
    ) -> None: ...

global___NamespaceSpec = NamespaceSpec

class Endpoints(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEB_ADDRESS_FIELD_NUMBER: builtins.int
    MTLS_GRPC_ADDRESS_FIELD_NUMBER: builtins.int
    GRPC_ADDRESS_FIELD_NUMBER: builtins.int
    web_address: builtins.str
    """The web UI address."""
    mtls_grpc_address: builtins.str
    """The gRPC address for mTLS client connections (may be empty if mTLS is disabled)."""
    grpc_address: builtins.str
    """The gRPC address for API key client connections (may be empty if API keys are disabled)."""
    def __init__(
        self,
        *,
        web_address: builtins.str = ...,
        mtls_grpc_address: builtins.str = ...,
        grpc_address: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "grpc_address",
            b"grpc_address",
            "mtls_grpc_address",
            b"mtls_grpc_address",
            "web_address",
            b"web_address",
        ],
    ) -> None: ...

global___Endpoints = Endpoints

class Limits(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIONS_PER_SECOND_LIMIT_FIELD_NUMBER: builtins.int
    actions_per_second_limit: builtins.int
    """The number of actions per second (APS) that is currently allowed for the namespace.
    The namespace may be throttled if its APS exceeds the limit.
    """
    def __init__(
        self,
        *,
        actions_per_second_limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "actions_per_second_limit", b"actions_per_second_limit"
        ],
    ) -> None: ...

global___Limits = Limits

class AWSPrivateLinkInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ALLOWED_PRINCIPAL_ARNS_FIELD_NUMBER: builtins.int
    VPC_ENDPOINT_SERVICE_NAMES_FIELD_NUMBER: builtins.int
    @property
    def allowed_principal_arns(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The list of principal arns that are allowed to access the namespace on the private link."""
    @property
    def vpc_endpoint_service_names(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The list of vpc endpoint service names that are associated with the namespace."""
    def __init__(
        self,
        *,
        allowed_principal_arns: collections.abc.Iterable[builtins.str] | None = ...,
        vpc_endpoint_service_names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "allowed_principal_arns",
            b"allowed_principal_arns",
            "vpc_endpoint_service_names",
            b"vpc_endpoint_service_names",
        ],
    ) -> None: ...

global___AWSPrivateLinkInfo = AWSPrivateLinkInfo

class PrivateConnectivity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGION_FIELD_NUMBER: builtins.int
    AWS_PRIVATE_LINK_FIELD_NUMBER: builtins.int
    region: builtins.str
    """The id of the region where the private connectivity applies."""
    @property
    def aws_private_link(self) -> global___AWSPrivateLinkInfo:
        """The AWS PrivateLink info.
        This will only be set for an aws region.
        """
    def __init__(
        self,
        *,
        region: builtins.str = ...,
        aws_private_link: global___AWSPrivateLinkInfo | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["aws_private_link", b"aws_private_link"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "aws_private_link", b"aws_private_link", "region", b"region"
        ],
    ) -> None: ...

global___PrivateConnectivity = PrivateConnectivity

class Namespace(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class RegionStatusEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___NamespaceRegionStatus: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___NamespaceRegionStatus | None = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    NAMESPACE_FIELD_NUMBER: builtins.int
    RESOURCE_VERSION_FIELD_NUMBER: builtins.int
    SPEC_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ASYNC_OPERATION_ID_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    ACTIVE_REGION_FIELD_NUMBER: builtins.int
    LIMITS_FIELD_NUMBER: builtins.int
    PRIVATE_CONNECTIVITIES_FIELD_NUMBER: builtins.int
    CREATED_TIME_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_TIME_FIELD_NUMBER: builtins.int
    REGION_STATUS_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace identifier."""
    resource_version: builtins.str
    """The current version of the namespace specification.
    The next update operation will have to include this version.
    """
    @property
    def spec(self) -> global___NamespaceSpec:
        """The namespace specification."""
    state: builtins.str
    """The current state of the namespace."""
    async_operation_id: builtins.str
    """The id of the async operation that is creating/updating/deleting the namespace, if any."""
    @property
    def endpoints(self) -> global___Endpoints:
        """The endpoints for the namespace."""
    active_region: builtins.str
    """The currently active region for the namespace."""
    @property
    def limits(self) -> global___Limits:
        """The limits set on the namespace currently."""
    @property
    def private_connectivities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PrivateConnectivity
    ]:
        """The private connectivities for the namespace, if any."""
    @property
    def created_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The date and time when the namespace was created."""
    @property
    def last_modified_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The date and time when the namespace was last modified.
        Will not be set if the namespace has never been modified.
        """
    @property
    def region_status(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        builtins.str, global___NamespaceRegionStatus
    ]:
        """The status of each region where the namespace is available.
        The id of the region is the key and the status is the value of the map.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        resource_version: builtins.str = ...,
        spec: global___NamespaceSpec | None = ...,
        state: builtins.str = ...,
        async_operation_id: builtins.str = ...,
        endpoints: global___Endpoints | None = ...,
        active_region: builtins.str = ...,
        limits: global___Limits | None = ...,
        private_connectivities: collections.abc.Iterable[global___PrivateConnectivity]
        | None = ...,
        created_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_modified_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        region_status: collections.abc.Mapping[
            builtins.str, global___NamespaceRegionStatus
        ]
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "created_time",
            b"created_time",
            "endpoints",
            b"endpoints",
            "last_modified_time",
            b"last_modified_time",
            "limits",
            b"limits",
            "spec",
            b"spec",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "active_region",
            b"active_region",
            "async_operation_id",
            b"async_operation_id",
            "created_time",
            b"created_time",
            "endpoints",
            b"endpoints",
            "last_modified_time",
            b"last_modified_time",
            "limits",
            b"limits",
            "namespace",
            b"namespace",
            "private_connectivities",
            b"private_connectivities",
            "region_status",
            b"region_status",
            "resource_version",
            b"resource_version",
            "spec",
            b"spec",
            "state",
            b"state",
        ],
    ) -> None: ...

global___Namespace = Namespace

class NamespaceRegionStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATE_FIELD_NUMBER: builtins.int
    ASYNC_OPERATION_ID_FIELD_NUMBER: builtins.int
    state: builtins.str
    """The current state of the namespace region.
    Possible values: adding, active, passive, removing, failed.
    For any failed state, reach out to Temporal Cloud support for remediation.
    """
    async_operation_id: builtins.str
    """The id of the async operation that is making changes to where the namespace is available, if any."""
    def __init__(
        self,
        *,
        state: builtins.str = ...,
        async_operation_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "async_operation_id", b"async_operation_id", "state", b"state"
        ],
    ) -> None: ...

global___NamespaceRegionStatus = NamespaceRegionStatus
