"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import sys
import typing

import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _IdReusePolicy:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _IdReusePolicyEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _IdReusePolicy.ValueType
    ],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ID_REUSE_POLICY_UNSPECIFIED: _IdReusePolicy.ValueType  # 0
    ID_REUSE_POLICY_ALLOW_DUPLICATE: _IdReusePolicy.ValueType  # 1
    """Always allow starting an execution using the same entity ID."""
    ID_REUSE_POLICY_ALLOW_DUPLICATE_FAILED_ONLY: _IdReusePolicy.ValueType  # 2
    """Allow starting an execution using the same ID, only when the last execution's final state is one of [terminated,
    cancelled, timed out, failed].
    """
    ID_REUSE_POLICY_REJECT_DUPLICATE: _IdReusePolicy.ValueType  # 3
    """Do not permit re-use of the ID for this execution. Future start requests could potentially change the policy,
    allowing re-use of the ID.
    """

class IdReusePolicy(_IdReusePolicy, metaclass=_IdReusePolicyEnumTypeWrapper):
    """Defines whether to allow re-using an ID from a previously *closed* execution.
    If the request is denied, the server returns an `ExecutionAlreadyStarted` error.

    See `IdConflictPolicy` for handling ID duplication with a *running* execution.
    """

ID_REUSE_POLICY_UNSPECIFIED: IdReusePolicy.ValueType  # 0
ID_REUSE_POLICY_ALLOW_DUPLICATE: IdReusePolicy.ValueType  # 1
"""Always allow starting an execution using the same entity ID."""
ID_REUSE_POLICY_ALLOW_DUPLICATE_FAILED_ONLY: IdReusePolicy.ValueType  # 2
"""Allow starting an execution using the same ID, only when the last execution's final state is one of [terminated,
cancelled, timed out, failed].
"""
ID_REUSE_POLICY_REJECT_DUPLICATE: IdReusePolicy.ValueType  # 3
"""Do not permit re-use of the ID for this execution. Future start requests could potentially change the policy,
allowing re-use of the ID.
"""
global___IdReusePolicy = IdReusePolicy

class _IdConflictPolicy:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _IdConflictPolicyEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _IdConflictPolicy.ValueType
    ],
    builtins.type,
):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ID_CONFLICT_POLICY_UNSPECIFIED: _IdConflictPolicy.ValueType  # 0
    ID_CONFLICT_POLICY_FAIL: _IdConflictPolicy.ValueType  # 1
    """Don't start a new execution; instead return `ExecutionAlreadyStarted` error."""
    ID_CONFLICT_POLICY_USE_EXISTING: _IdConflictPolicy.ValueType  # 2
    """Don't start a new execution; instead return a handle for the running execution."""
    ID_CONFLICT_POLICY_TERMINATE_EXISTING: _IdConflictPolicy.ValueType  # 3
    """Terminate the running execution before starting a new one."""

class IdConflictPolicy(_IdConflictPolicy, metaclass=_IdConflictPolicyEnumTypeWrapper):
    """Defines what to do when trying to start an execution with the same ID as a *running* execution.
    Note that it is *never* valid to have two actively running instances of the same execution ID.

    See `IdReusePolicy` for handling execution ID duplication with a *closed* execution.
    """

ID_CONFLICT_POLICY_UNSPECIFIED: IdConflictPolicy.ValueType  # 0
ID_CONFLICT_POLICY_FAIL: IdConflictPolicy.ValueType  # 1
"""Don't start a new execution; instead return `ExecutionAlreadyStarted` error."""
ID_CONFLICT_POLICY_USE_EXISTING: IdConflictPolicy.ValueType  # 2
"""Don't start a new execution; instead return a handle for the running execution."""
ID_CONFLICT_POLICY_TERMINATE_EXISTING: IdConflictPolicy.ValueType  # 3
"""Terminate the running execution before starting a new one."""
global___IdConflictPolicy = IdConflictPolicy
