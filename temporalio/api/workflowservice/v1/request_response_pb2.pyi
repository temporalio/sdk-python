"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import temporalio.api.command.v1.message_pb2
import temporalio.api.common.v1.message_pb2
import temporalio.api.enums.v1.common_pb2
import temporalio.api.enums.v1.failed_cause_pb2
import temporalio.api.enums.v1.namespace_pb2
import temporalio.api.enums.v1.query_pb2
import temporalio.api.enums.v1.reset_pb2
import temporalio.api.enums.v1.task_queue_pb2
import temporalio.api.enums.v1.workflow_pb2
import temporalio.api.failure.v1.message_pb2
import temporalio.api.filter.v1.message_pb2
import temporalio.api.history.v1.message_pb2
import temporalio.api.namespace.v1.message_pb2
import temporalio.api.query.v1.message_pb2
import temporalio.api.replication.v1.message_pb2
import temporalio.api.taskqueue.v1.message_pb2
import temporalio.api.version.v1.message_pb2
import temporalio.api.workflow.v1.message_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class RegisterNamespaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    NAMESPACE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    OWNER_EMAIL_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_RETENTION_PERIOD_FIELD_NUMBER: builtins.int
    CLUSTERS_FIELD_NUMBER: builtins.int
    ACTIVE_CLUSTER_NAME_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    HISTORY_ARCHIVAL_STATE_FIELD_NUMBER: builtins.int
    HISTORY_ARCHIVAL_URI_FIELD_NUMBER: builtins.int
    VISIBILITY_ARCHIVAL_STATE_FIELD_NUMBER: builtins.int
    VISIBILITY_ARCHIVAL_URI_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    description: typing.Text
    owner_email: typing.Text
    @property
    def workflow_execution_retention_period(
        self,
    ) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def clusters(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.replication.v1.message_pb2.ClusterReplicationConfig
    ]: ...
    active_cluster_name: typing.Text
    @property
    def data(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A key-value map for any customized purpose."""
        pass
    security_token: typing.Text
    is_global_namespace: builtins.bool
    history_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType
    """If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used."""

    history_archival_uri: typing.Text
    visibility_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType
    """If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used."""

    visibility_archival_uri: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        description: typing.Text = ...,
        owner_email: typing.Text = ...,
        workflow_execution_retention_period: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        clusters: typing.Optional[
            typing.Iterable[
                temporalio.api.replication.v1.message_pb2.ClusterReplicationConfig
            ]
        ] = ...,
        active_cluster_name: typing.Text = ...,
        data: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        security_token: typing.Text = ...,
        is_global_namespace: builtins.bool = ...,
        history_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType = ...,
        history_archival_uri: typing.Text = ...,
        visibility_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType = ...,
        visibility_archival_uri: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution_retention_period",
            b"workflow_execution_retention_period",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "active_cluster_name",
            b"active_cluster_name",
            "clusters",
            b"clusters",
            "data",
            b"data",
            "description",
            b"description",
            "history_archival_state",
            b"history_archival_state",
            "history_archival_uri",
            b"history_archival_uri",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace",
            b"namespace",
            "owner_email",
            b"owner_email",
            "security_token",
            b"security_token",
            "visibility_archival_state",
            b"visibility_archival_state",
            "visibility_archival_uri",
            b"visibility_archival_uri",
            "workflow_execution_retention_period",
            b"workflow_execution_retention_period",
        ],
    ) -> None: ...

global___RegisterNamespaceRequest = RegisterNamespaceRequest

class RegisterNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RegisterNamespaceResponse = RegisterNamespaceResponse

class ListNamespacesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    NAMESPACE_FILTER_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def namespace_filter(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceFilter: ...
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        namespace_filter: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceFilter
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["namespace_filter", b"namespace_filter"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace_filter",
            b"namespace_filter",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
        ],
    ) -> None: ...

global___ListNamespacesRequest = ListNamespacesRequest

class ListNamespacesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def namespaces(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___DescribeNamespaceResponse
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        namespaces: typing.Optional[
            typing.Iterable[global___DescribeNamespaceResponse]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespaces", b"namespaces", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListNamespacesResponse = ListNamespacesResponse

class DescribeNamespaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    id: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        id: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["id", b"id", "namespace", b"namespace"],
    ) -> None: ...

global___DescribeNamespaceRequest = DescribeNamespaceRequest

class DescribeNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    FAILOVER_VERSION_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def namespace_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    failover_version: builtins.int
    is_global_namespace: builtins.bool
    def __init__(
        self,
        *,
        namespace_info: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceInfo
        ] = ...,
        config: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceConfig
        ] = ...,
        replication_config: typing.Optional[
            temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        ] = ...,
        failover_version: builtins.int = ...,
        is_global_namespace: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "failover_version",
            b"failover_version",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> None: ...

global___DescribeNamespaceResponse = DescribeNamespaceResponse

class UpdateNamespaceRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134::request-mask-required=disabled
        aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
    (-- api-linter: core::0134::request-resource-required=disabled
        aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    UPDATE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    DELETE_BAD_BINARY_FIELD_NUMBER: builtins.int
    PROMOTE_NAMESPACE_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def update_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.UpdateNamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    security_token: typing.Text
    delete_bad_binary: typing.Text
    promote_namespace: builtins.bool
    """promote local namespace to global namespace. Ignored if namespace is already global namespace."""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        update_info: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.UpdateNamespaceInfo
        ] = ...,
        config: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceConfig
        ] = ...,
        replication_config: typing.Optional[
            temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        ] = ...,
        security_token: typing.Text = ...,
        delete_bad_binary: typing.Text = ...,
        promote_namespace: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "replication_config",
            b"replication_config",
            "update_info",
            b"update_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "delete_bad_binary",
            b"delete_bad_binary",
            "namespace",
            b"namespace",
            "promote_namespace",
            b"promote_namespace",
            "replication_config",
            b"replication_config",
            "security_token",
            b"security_token",
            "update_info",
            b"update_info",
        ],
    ) -> None: ...

global___UpdateNamespaceRequest = UpdateNamespaceRequest

class UpdateNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    FAILOVER_VERSION_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def namespace_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    failover_version: builtins.int
    is_global_namespace: builtins.bool
    def __init__(
        self,
        *,
        namespace_info: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceInfo
        ] = ...,
        config: typing.Optional[
            temporalio.api.namespace.v1.message_pb2.NamespaceConfig
        ] = ...,
        replication_config: typing.Optional[
            temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        ] = ...,
        failover_version: builtins.int = ...,
        is_global_namespace: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "failover_version",
            b"failover_version",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> None: ...

global___UpdateNamespaceResponse = UpdateNamespaceResponse

class DeprecateNamespaceRequest(google.protobuf.message.Message):
    """Deprecated."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    security_token: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        security_token: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "security_token", b"security_token"
        ],
    ) -> None: ...

global___DeprecateNamespaceRequest = DeprecateNamespaceRequest

class DeprecateNamespaceResponse(google.protobuf.message.Message):
    """Deprecated."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___DeprecateNamespaceResponse = DeprecateNamespaceResponse

class StartWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_RUN_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_TIMEOUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_REUSE_POLICY_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    CRON_SCHEDULE_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    workflow_id: typing.Text
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized arguments to the workflow. These are passed as arguments to the workflow function."""
        pass
    @property
    def workflow_execution_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Total workflow execution timeout including retries and continue as new."""
        pass
    @property
    def workflow_run_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow run."""
        pass
    @property
    def workflow_task_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow task."""
        pass
    identity: typing.Text
    """The identity of the client who initiated this request"""

    request_id: typing.Text
    """A unique identifier for this start request. Typically UUIDv4."""

    workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType
    """Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE."""
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """The retry policy for the workflow. Will never exceed `workflow_execution_timeout`."""
        pass
    cron_schedule: typing.Text
    """See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/"""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo: ...
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        workflow_type: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowType
        ] = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        input: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        workflow_execution_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        workflow_run_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        workflow_task_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        identity: typing.Text = ...,
        request_id: typing.Text = ...,
        workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType = ...,
        retry_policy: typing.Optional[
            temporalio.api.common.v1.message_pb2.RetryPolicy
        ] = ...,
        cron_schedule: typing.Text = ...,
        memo: typing.Optional[temporalio.api.common.v1.message_pb2.Memo] = ...,
        search_attributes: typing.Optional[
            temporalio.api.common.v1.message_pb2.SearchAttributes
        ] = ...,
        header: typing.Optional[temporalio.api.common.v1.message_pb2.Header] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "header",
            b"header",
            "input",
            b"input",
            "memo",
            b"memo",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "cron_schedule",
            b"cron_schedule",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "memo",
            b"memo",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_id",
            b"workflow_id",
            "workflow_id_reuse_policy",
            b"workflow_id_reuse_policy",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___StartWorkflowExecutionRequest = StartWorkflowExecutionRequest

class StartWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RUN_ID_FIELD_NUMBER: builtins.int
    run_id: typing.Text
    def __init__(
        self,
        *,
        run_id: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["run_id", b"run_id"]
    ) -> None: ...

global___StartWorkflowExecutionResponse = StartWorkflowExecutionResponse

class GetWorkflowExecutionHistoryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WAIT_NEW_EVENT_FIELD_NUMBER: builtins.int
    HISTORY_EVENT_FILTER_TYPE_FIELD_NUMBER: builtins.int
    SKIP_ARCHIVAL_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    """If a `GetWorkflowExecutionHistoryResponse` or a `PollWorkflowTaskQueueResponse` had one of
    these, it should be passed here to fetch the next page.
    """

    wait_new_event: builtins.bool
    """If set to true, the RPC call will not resolve until there is a new event which matches
    the `history_event_filter_type`, or a timeout is hit.
    """

    history_event_filter_type: temporalio.api.enums.v1.workflow_pb2.HistoryEventFilterType.ValueType
    """Filter returned events such that they match the specified filter type.
    Default: HISTORY_EVENT_FILTER_TYPE_ALL_EVENT.
    """

    skip_archival: builtins.bool
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        wait_new_event: builtins.bool = ...,
        history_event_filter_type: temporalio.api.enums.v1.workflow_pb2.HistoryEventFilterType.ValueType = ...,
        skip_archival: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "history_event_filter_type",
            b"history_event_filter_type",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "skip_archival",
            b"skip_archival",
            "wait_new_event",
            b"wait_new_event",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryRequest = GetWorkflowExecutionHistoryRequest

class GetWorkflowExecutionHistoryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HISTORY_FIELD_NUMBER: builtins.int
    RAW_HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    ARCHIVED_FIELD_NUMBER: builtins.int
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History: ...
    @property
    def raw_history(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.common.v1.message_pb2.DataBlob
    ]:
        """Raw history is an alternate representation of history that may be returned if configured on
        the frontend. This is not supported by all SDKs. Either this or `history` will be set.
        """
        pass
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response"""

    archived: builtins.bool
    def __init__(
        self,
        *,
        history: typing.Optional[temporalio.api.history.v1.message_pb2.History] = ...,
        raw_history: typing.Optional[
            typing.Iterable[temporalio.api.common.v1.message_pb2.DataBlob]
        ] = ...,
        next_page_token: builtins.bytes = ...,
        archived: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["history", b"history"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "archived",
            b"archived",
            "history",
            b"history",
            "next_page_token",
            b"next_page_token",
            "raw_history",
            b"raw_history",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryResponse = GetWorkflowExecutionHistoryResponse

class GetWorkflowExecutionHistoryReverseRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryReverseRequest = (
    GetWorkflowExecutionHistoryReverseRequest
)

class GetWorkflowExecutionHistoryReverseResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History: ...
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response"""
    def __init__(
        self,
        *,
        history: typing.Optional[temporalio.api.history.v1.message_pb2.History] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["history", b"history"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "history", b"history", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryReverseResponse = (
    GetWorkflowExecutionHistoryReverseResponse
)

class PollWorkflowTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    identity: typing.Text
    """The identity of the worker/client who is polling this task queue"""

    binary_checksum: typing.Text
    """Each worker process should provide an ID unique to the specific set of code it is running"""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        identity: typing.Text = ...,
        binary_checksum: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["task_queue", b"task_queue"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
        ],
    ) -> None: ...

global___PollWorkflowTaskQueueRequest = PollWorkflowTaskQueueRequest

class PollWorkflowTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class QueriesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery: ...
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[
                temporalio.api.query.v1.message_pb2.WorkflowQuery
            ] = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    PREVIOUS_STARTED_EVENT_ID_FIELD_NUMBER: builtins.int
    STARTED_EVENT_ID_FIELD_NUMBER: builtins.int
    ATTEMPT_FIELD_NUMBER: builtins.int
    BACKLOG_COUNT_HINT_FIELD_NUMBER: builtins.int
    HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TASK_QUEUE_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    STARTED_TIME_FIELD_NUMBER: builtins.int
    QUERIES_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """A unique identifier for this task"""
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    previous_started_event_id: builtins.int
    """The last workflow task started event which was processed by some worker for this execution.
    Will be zero if no task has ever started.
    """

    started_event_id: builtins.int
    """The id of the most recent workflow task started event, which will have been generated as a
    result of this poll request being served.
    """

    attempt: builtins.int
    """Starting at 1, the number of attempts to complete this task by any worker."""

    backlog_count_hint: builtins.int
    """A hint that there are more tasks already present in this task queue. Can be used to
    prioritize draining a sticky queue before polling from a normal queue.
    """
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History:
        """The history for this workflow, which will either be complete or partial. Partial histories
        are sent to workers who have signaled that they are using a sticky queue when completing
        a workflow task.
        """
        pass
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response. Such events
    should be fetched via `GetWorkflowExecutionHistory`.
    """
    @property
    def query(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery:
        """Legacy queries appear in this field. The query must be responded to via
        `RespondQueryTaskCompleted`. If the workflow is already closed (queries are permitted on
        closed workflows) then the `history` field will be populated with the entire history. It
        may also be populated if this task originates on a non-sticky queue.
        """
        pass
    @property
    def workflow_execution_task_queue(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue:
        """The task queue this task originated from, which will always be the original non-sticky name
        for the queue, even if this response came from polling a sticky queue.
        """
        pass
    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When this task was scheduled by the server"""
        pass
    @property
    def started_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When the current workflow task started event was generated, meaning the current attempt."""
        pass
    @property
    def queries(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        typing.Text, temporalio.api.query.v1.message_pb2.WorkflowQuery
    ]:
        """Queries that should be executed after applying the history in this task. Responses should be
        attached to `RespondWorkflowTaskCompletedRequest::query_results`
        """
        pass
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        workflow_type: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowType
        ] = ...,
        previous_started_event_id: builtins.int = ...,
        started_event_id: builtins.int = ...,
        attempt: builtins.int = ...,
        backlog_count_hint: builtins.int = ...,
        history: typing.Optional[temporalio.api.history.v1.message_pb2.History] = ...,
        next_page_token: builtins.bytes = ...,
        query: typing.Optional[temporalio.api.query.v1.message_pb2.WorkflowQuery] = ...,
        workflow_execution_task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        scheduled_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        started_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        queries: typing.Optional[
            typing.Mapping[
                typing.Text, temporalio.api.query.v1.message_pb2.WorkflowQuery
            ]
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "history",
            b"history",
            "query",
            b"query",
            "scheduled_time",
            b"scheduled_time",
            "started_time",
            b"started_time",
            "workflow_execution",
            b"workflow_execution",
            "workflow_execution_task_queue",
            b"workflow_execution_task_queue",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "attempt",
            b"attempt",
            "backlog_count_hint",
            b"backlog_count_hint",
            "history",
            b"history",
            "next_page_token",
            b"next_page_token",
            "previous_started_event_id",
            b"previous_started_event_id",
            "queries",
            b"queries",
            "query",
            b"query",
            "scheduled_time",
            b"scheduled_time",
            "started_event_id",
            b"started_event_id",
            "started_time",
            b"started_time",
            "task_token",
            b"task_token",
            "workflow_execution",
            b"workflow_execution",
            "workflow_execution_task_queue",
            b"workflow_execution_task_queue",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___PollWorkflowTaskQueueResponse = PollWorkflowTaskQueueResponse

class RespondWorkflowTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class QueryResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> temporalio.api.query.v1.message_pb2.WorkflowQueryResult: ...
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[
                temporalio.api.query.v1.message_pb2.WorkflowQueryResult
            ] = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    COMMANDS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    STICKY_ATTRIBUTES_FIELD_NUMBER: builtins.int
    RETURN_NEW_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    FORCE_CREATE_NEW_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    QUERY_RESULTS_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollWorkflowTaskQueueResponse`"""
    @property
    def commands(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.command.v1.message_pb2.Command
    ]:
        """A list of commands generated when driving the workflow code in response to the new task"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""
    @property
    def sticky_attributes(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.StickyExecutionAttributes:
        """May be set by workers to indicate that the worker desires future tasks to be provided with
        incremental history on a sticky queue.
        """
        pass
    return_new_workflow_task: builtins.bool
    """If set, the worker wishes to immediately receive the next workflow task as a response to
    this completion. This can save on polling round-trips.
    """

    force_create_new_workflow_task: builtins.bool
    """Can be used to *force* creation of a new workflow task, even if no commands have resolved or
    one would not otherwise have been generated. This is used when the worker knows it is doing
    something useful, but cannot complete it within the workflow task timeout. Local activities
    which run for longer than the task timeout being the prime example.
    """

    binary_checksum: typing.Text
    """Worker process' unique binary id"""
    @property
    def query_results(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        typing.Text, temporalio.api.query.v1.message_pb2.WorkflowQueryResult
    ]:
        """Responses to the `queries` field in the task being responded to"""
        pass
    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        commands: typing.Optional[
            typing.Iterable[temporalio.api.command.v1.message_pb2.Command]
        ] = ...,
        identity: typing.Text = ...,
        sticky_attributes: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.StickyExecutionAttributes
        ] = ...,
        return_new_workflow_task: builtins.bool = ...,
        force_create_new_workflow_task: builtins.bool = ...,
        binary_checksum: typing.Text = ...,
        query_results: typing.Optional[
            typing.Mapping[
                typing.Text, temporalio.api.query.v1.message_pb2.WorkflowQueryResult
            ]
        ] = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "sticky_attributes", b"sticky_attributes"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "commands",
            b"commands",
            "force_create_new_workflow_task",
            b"force_create_new_workflow_task",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "query_results",
            b"query_results",
            "return_new_workflow_task",
            b"return_new_workflow_task",
            "sticky_attributes",
            b"sticky_attributes",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondWorkflowTaskCompletedRequest = RespondWorkflowTaskCompletedRequest

class RespondWorkflowTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    ACTIVITY_TASKS_FIELD_NUMBER: builtins.int
    @property
    def workflow_task(self) -> global___PollWorkflowTaskQueueResponse:
        """See `RespondWorkflowTaskCompletedResponse::return_new_workflow_task`"""
        pass
    @property
    def activity_tasks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PollActivityTaskQueueResponse
    ]:
        """See `ScheduleActivityTaskCommandAttributes::request_start`"""
        pass
    def __init__(
        self,
        *,
        workflow_task: typing.Optional[global___PollWorkflowTaskQueueResponse] = ...,
        activity_tasks: typing.Optional[
            typing.Iterable[global___PollActivityTaskQueueResponse]
        ] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["workflow_task", b"workflow_task"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_tasks", b"activity_tasks", "workflow_task", b"workflow_task"
        ],
    ) -> None: ...

global___RespondWorkflowTaskCompletedResponse = RespondWorkflowTaskCompletedResponse

class RespondWorkflowTaskFailedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    CAUSE_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollWorkflowTaskQueueResponse`"""

    cause: temporalio.api.enums.v1.failed_cause_pb2.WorkflowTaskFailedCause.ValueType
    """Why did the task fail? It's important to note that many of the variants in this enum cannot
    apply to worker responses. See the type's doc for more.
    """
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Failure details"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    binary_checksum: typing.Text
    """Worker process' unique binary id"""

    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        cause: temporalio.api.enums.v1.failed_cause_pb2.WorkflowTaskFailedCause.ValueType = ...,
        failure: typing.Optional[temporalio.api.failure.v1.message_pb2.Failure] = ...,
        identity: typing.Text = ...,
        binary_checksum: typing.Text = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["failure", b"failure"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "cause",
            b"cause",
            "failure",
            b"failure",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondWorkflowTaskFailedRequest = RespondWorkflowTaskFailedRequest

class RespondWorkflowTaskFailedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondWorkflowTaskFailedResponse = RespondWorkflowTaskFailedResponse

class PollActivityTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    TASK_QUEUE_METADATA_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    identity: typing.Text
    """The identity of the worker/client"""
    @property
    def task_queue_metadata(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueueMetadata: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        identity: typing.Text = ...,
        task_queue_metadata: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueueMetadata
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "task_queue", b"task_queue", "task_queue_metadata", b"task_queue_metadata"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
            "task_queue_metadata",
            b"task_queue_metadata",
        ],
    ) -> None: ...

global___PollActivityTaskQueueRequest = PollActivityTaskQueueRequest

class PollActivityTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    WORKFLOW_NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    ACTIVITY_TYPE_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    CURRENT_ATTEMPT_SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    STARTED_TIME_FIELD_NUMBER: builtins.int
    ATTEMPT_FIELD_NUMBER: builtins.int
    SCHEDULE_TO_CLOSE_TIMEOUT_FIELD_NUMBER: builtins.int
    START_TO_CLOSE_TIMEOUT_FIELD_NUMBER: builtins.int
    HEARTBEAT_TIMEOUT_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """A unique identifier for this task"""

    workflow_namespace: typing.Text
    """The namespace the workflow which requested this activity lives in"""
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType:
        """Type of the requesting workflow"""
        pass
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution:
        """Execution info of the requesting workflow"""
        pass
    @property
    def activity_type(self) -> temporalio.api.common.v1.message_pb2.ActivityType: ...
    activity_id: typing.Text
    """The autogenerated or user specified identifier of this activity. Can be used to complete the
    activity via `RespondActivityTaskCompletedById`. May be re-used as long as the last usage
    has resolved, but unique IDs for every activity invocation is a good idea.
    """
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header:
        """Headers specified by the scheduling workflow. Commonly used to propagate contextual info
        from the workflow to its activities. For example, tracing contexts.
        """
        pass
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arguments to the activity invocation"""
        pass
    @property
    def heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Details of the last heartbeat that was recorded for this activity as of the time this task
        was delivered.
        """
        pass
    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task first scheduled"""
        pass
    @property
    def current_attempt_scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task attempt scheduled"""
        pass
    @property
    def started_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task started (this attempt)"""
        pass
    attempt: builtins.int
    """Starting at 1, the number of attempts to perform this activity"""
    @property
    def schedule_to_close_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """First scheduled -> final result reported timeout

        (-- api-linter: core::0140::prepositions=disabled
            aip.dev/not-precedent: "to" is used to indicate interval. --)
        """
        pass
    @property
    def start_to_close_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Current attempt start -> final result reported timeout

        (-- api-linter: core::0140::prepositions=disabled
            aip.dev/not-precedent: "to" is used to indicate interval. --)
        """
        pass
    @property
    def heartbeat_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Window within which the activity must report a heartbeat, or be timed out."""
        pass
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """This is the retry policy the service uses which may be different from the one provided
        (or not) during activity scheduling. The service can override the provided one if some
        values are not specified or exceed configured system limits.
        """
        pass
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        workflow_namespace: typing.Text = ...,
        workflow_type: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowType
        ] = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        activity_type: typing.Optional[
            temporalio.api.common.v1.message_pb2.ActivityType
        ] = ...,
        activity_id: typing.Text = ...,
        header: typing.Optional[temporalio.api.common.v1.message_pb2.Header] = ...,
        input: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        heartbeat_details: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
        scheduled_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        current_attempt_scheduled_time: typing.Optional[
            google.protobuf.timestamp_pb2.Timestamp
        ] = ...,
        started_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        attempt: builtins.int = ...,
        schedule_to_close_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        start_to_close_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        heartbeat_timeout: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        retry_policy: typing.Optional[
            temporalio.api.common.v1.message_pb2.RetryPolicy
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "activity_type",
            b"activity_type",
            "current_attempt_scheduled_time",
            b"current_attempt_scheduled_time",
            "header",
            b"header",
            "heartbeat_details",
            b"heartbeat_details",
            "heartbeat_timeout",
            b"heartbeat_timeout",
            "input",
            b"input",
            "retry_policy",
            b"retry_policy",
            "schedule_to_close_timeout",
            b"schedule_to_close_timeout",
            "scheduled_time",
            b"scheduled_time",
            "start_to_close_timeout",
            b"start_to_close_timeout",
            "started_time",
            b"started_time",
            "workflow_execution",
            b"workflow_execution",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "activity_type",
            b"activity_type",
            "attempt",
            b"attempt",
            "current_attempt_scheduled_time",
            b"current_attempt_scheduled_time",
            "header",
            b"header",
            "heartbeat_details",
            b"heartbeat_details",
            "heartbeat_timeout",
            b"heartbeat_timeout",
            "input",
            b"input",
            "retry_policy",
            b"retry_policy",
            "schedule_to_close_timeout",
            b"schedule_to_close_timeout",
            "scheduled_time",
            b"scheduled_time",
            "start_to_close_timeout",
            b"start_to_close_timeout",
            "started_time",
            b"started_time",
            "task_token",
            b"task_token",
            "workflow_execution",
            b"workflow_execution",
            "workflow_namespace",
            b"workflow_namespace",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___PollActivityTaskQueueResponse = PollActivityTaskQueueResponse

class RecordActivityTaskHeartbeatRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arbitrary data, of which the most recent call is kept, to store for this activity"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        details: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RecordActivityTaskHeartbeatRequest = RecordActivityTaskHeartbeatRequest

class RecordActivityTaskHeartbeatResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CANCEL_REQUESTED_FIELD_NUMBER: builtins.int
    cancel_requested: builtins.bool
    """Will be set to true if the activity has been asked to cancel itself. The SDK should then
    notify the activity of cancellation if it is still running.
    """
    def __init__(
        self,
        *,
        cancel_requested: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["cancel_requested", b"cancel_requested"],
    ) -> None: ...

global___RecordActivityTaskHeartbeatResponse = RecordActivityTaskHeartbeatResponse

class RecordActivityTaskHeartbeatByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    """Namespace of the workflow which scheduled this activity"""

    workflow_id: typing.Text
    """Id of the workflow which scheduled this activity"""

    run_id: typing.Text
    """Run Id of the workflow which scheduled this activity"""

    activity_id: typing.Text
    """Id of the activity we're heartbeating"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arbitrary data, of which the most recent call is kept, to store for this activity"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        run_id: typing.Text = ...,
        activity_id: typing.Text = ...,
        details: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RecordActivityTaskHeartbeatByIdRequest = RecordActivityTaskHeartbeatByIdRequest

class RecordActivityTaskHeartbeatByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CANCEL_REQUESTED_FIELD_NUMBER: builtins.int
    cancel_requested: builtins.bool
    """Will be set to true if the activity has been asked to cancel itself. The SDK should then
    notify the activity of cancellation if it is still running.
    """
    def __init__(
        self,
        *,
        cancel_requested: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["cancel_requested", b"cancel_requested"],
    ) -> None: ...

global___RecordActivityTaskHeartbeatByIdResponse = (
    RecordActivityTaskHeartbeatByIdResponse
)

class RespondActivityTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def result(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """The result of successfully executing the activity"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        result: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["result", b"result"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "result",
            b"result",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondActivityTaskCompletedRequest = RespondActivityTaskCompletedRequest

class RespondActivityTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCompletedResponse = RespondActivityTaskCompletedResponse

class RespondActivityTaskCompletedByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    """Namespace of the workflow which scheduled this activity"""

    workflow_id: typing.Text
    """Id of the workflow which scheduled this activity"""

    run_id: typing.Text
    """Run Id of the workflow which scheduled this activity"""

    activity_id: typing.Text
    """Id of the activity to complete"""
    @property
    def result(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """The serialized result of activity execution"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        run_id: typing.Text = ...,
        activity_id: typing.Text = ...,
        result: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["result", b"result"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "result",
            b"result",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskCompletedByIdRequest = (
    RespondActivityTaskCompletedByIdRequest
)

class RespondActivityTaskCompletedByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCompletedByIdResponse = (
    RespondActivityTaskCompletedByIdResponse
)

class RespondActivityTaskFailedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    LAST_HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Detailed failure information"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    namespace: typing.Text
    @property
    def last_heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Additional details to be stored as last activity heartbeat"""
        pass
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        failure: typing.Optional[temporalio.api.failure.v1.message_pb2.Failure] = ...,
        identity: typing.Text = ...,
        namespace: typing.Text = ...,
        last_heartbeat_details: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "failure", b"failure", "last_heartbeat_details", b"last_heartbeat_details"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "failure",
            b"failure",
            "identity",
            b"identity",
            "last_heartbeat_details",
            b"last_heartbeat_details",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondActivityTaskFailedRequest = RespondActivityTaskFailedRequest

class RespondActivityTaskFailedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FAILURES_FIELD_NUMBER: builtins.int
    @property
    def failures(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.failure.v1.message_pb2.Failure
    ]:
        """Server validation failures could include
        last_heartbeat_details payload is too large, request failure is too large
        """
        pass
    def __init__(
        self,
        *,
        failures: typing.Optional[
            typing.Iterable[temporalio.api.failure.v1.message_pb2.Failure]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["failures", b"failures"]
    ) -> None: ...

global___RespondActivityTaskFailedResponse = RespondActivityTaskFailedResponse

class RespondActivityTaskFailedByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    LAST_HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    """Namespace of the workflow which scheduled this activity"""

    workflow_id: typing.Text
    """Id of the workflow which scheduled this activity"""

    run_id: typing.Text
    """Run Id of the workflow which scheduled this activity"""

    activity_id: typing.Text
    """Id of the activity to fail"""
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Detailed failure information"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""
    @property
    def last_heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Additional details to be stored as last activity heartbeat"""
        pass
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        run_id: typing.Text = ...,
        activity_id: typing.Text = ...,
        failure: typing.Optional[temporalio.api.failure.v1.message_pb2.Failure] = ...,
        identity: typing.Text = ...,
        last_heartbeat_details: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "failure", b"failure", "last_heartbeat_details", b"last_heartbeat_details"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "failure",
            b"failure",
            "identity",
            b"identity",
            "last_heartbeat_details",
            b"last_heartbeat_details",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskFailedByIdRequest = RespondActivityTaskFailedByIdRequest

class RespondActivityTaskFailedByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FAILURES_FIELD_NUMBER: builtins.int
    @property
    def failures(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.failure.v1.message_pb2.Failure
    ]:
        """Server validation failures could include
        last_heartbeat_details payload is too large, request failure is too large
        """
        pass
    def __init__(
        self,
        *,
        failures: typing.Optional[
            typing.Iterable[temporalio.api.failure.v1.message_pb2.Failure]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["failures", b"failures"]
    ) -> None: ...

global___RespondActivityTaskFailedByIdResponse = RespondActivityTaskFailedByIdResponse

class RespondActivityTaskCanceledRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the cancellation"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        details: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondActivityTaskCanceledRequest = RespondActivityTaskCanceledRequest

class RespondActivityTaskCanceledResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCanceledResponse = RespondActivityTaskCanceledResponse

class RespondActivityTaskCanceledByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    """Namespace of the workflow which scheduled this activity"""

    workflow_id: typing.Text
    """Id of the workflow which scheduled this activity"""

    run_id: typing.Text
    """Run Id of the workflow which scheduled this activity"""

    activity_id: typing.Text
    """Id of the activity to confirm is cancelled"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the cancellation"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        run_id: typing.Text = ...,
        activity_id: typing.Text = ...,
        details: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskCanceledByIdRequest = RespondActivityTaskCanceledByIdRequest

class RespondActivityTaskCanceledByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCanceledByIdResponse = (
    RespondActivityTaskCanceledByIdResponse
)

class RequestCancelWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    FIRST_EXECUTION_RUN_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    identity: typing.Text
    """The identity of the worker/client"""

    request_id: typing.Text
    """Used to de-dupe cancellation requests"""

    first_execution_run_id: typing.Text
    """If set, this call will error if the most recent (if no run id is set on
    `workflow_execution`), or specified (if it is) workflow execution is not part of the same
    execution chain as this id.
    """

    reason: typing.Text
    """Reason for requesting the cancellation"""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        identity: typing.Text = ...,
        request_id: typing.Text = ...,
        first_execution_run_id: typing.Text = ...,
        reason: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "first_execution_run_id",
            b"first_execution_run_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "request_id",
            b"request_id",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___RequestCancelWorkflowExecutionRequest = RequestCancelWorkflowExecutionRequest

class RequestCancelWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RequestCancelWorkflowExecutionResponse = RequestCancelWorkflowExecutionResponse

class SignalWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    SIGNAL_NAME_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    signal_name: typing.Text
    """The workflow author-defined name of the signal to send to the workflow"""
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized value(s) to provide with the signal"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    request_id: typing.Text
    """Used to de-dupe sent signals"""

    control: typing.Text
    """Deprecated"""
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header:
        """Headers that are passed with the signal to the processing workflow.
        These can include things like auth or tracing tokens.
        """
        pass
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        signal_name: typing.Text = ...,
        input: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
        request_id: typing.Text = ...,
        control: typing.Text = ...,
        header: typing.Optional[temporalio.api.common.v1.message_pb2.Header] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "header",
            b"header",
            "input",
            b"input",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "control",
            b"control",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "signal_name",
            b"signal_name",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___SignalWorkflowExecutionRequest = SignalWorkflowExecutionRequest

class SignalWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___SignalWorkflowExecutionResponse = SignalWorkflowExecutionResponse

class SignalWithStartWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_RUN_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_TIMEOUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_REUSE_POLICY_FIELD_NUMBER: builtins.int
    SIGNAL_NAME_FIELD_NUMBER: builtins.int
    SIGNAL_INPUT_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    CRON_SCHEDULE_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    workflow_id: typing.Text
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue:
        """The task queue to start this workflow on, if it will be started"""
        pass
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized arguments to the workflow. These are passed as arguments to the workflow function."""
        pass
    @property
    def workflow_execution_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Total workflow execution timeout including retries and continue as new"""
        pass
    @property
    def workflow_run_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow run"""
        pass
    @property
    def workflow_task_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow task"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    request_id: typing.Text
    """Used to de-dupe signal w/ start requests"""

    workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType
    signal_name: typing.Text
    """The workflow author-defined name of the signal to send to the workflow"""
    @property
    def signal_input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized value(s) to provide with the signal"""
        pass
    control: typing.Text
    """Deprecated"""
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """Retry policy for the workflow Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE."""
        pass
    cron_schedule: typing.Text
    """See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/"""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo: ...
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_id: typing.Text = ...,
        workflow_type: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowType
        ] = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        input: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        workflow_execution_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        workflow_run_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        workflow_task_timeout: typing.Optional[
            google.protobuf.duration_pb2.Duration
        ] = ...,
        identity: typing.Text = ...,
        request_id: typing.Text = ...,
        workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType = ...,
        signal_name: typing.Text = ...,
        signal_input: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
        control: typing.Text = ...,
        retry_policy: typing.Optional[
            temporalio.api.common.v1.message_pb2.RetryPolicy
        ] = ...,
        cron_schedule: typing.Text = ...,
        memo: typing.Optional[temporalio.api.common.v1.message_pb2.Memo] = ...,
        search_attributes: typing.Optional[
            temporalio.api.common.v1.message_pb2.SearchAttributes
        ] = ...,
        header: typing.Optional[temporalio.api.common.v1.message_pb2.Header] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "header",
            b"header",
            "input",
            b"input",
            "memo",
            b"memo",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "signal_input",
            b"signal_input",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "control",
            b"control",
            "cron_schedule",
            b"cron_schedule",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "memo",
            b"memo",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "signal_input",
            b"signal_input",
            "signal_name",
            b"signal_name",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_id",
            b"workflow_id",
            "workflow_id_reuse_policy",
            b"workflow_id_reuse_policy",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___SignalWithStartWorkflowExecutionRequest = (
    SignalWithStartWorkflowExecutionRequest
)

class SignalWithStartWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RUN_ID_FIELD_NUMBER: builtins.int
    run_id: typing.Text
    def __init__(
        self,
        *,
        run_id: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["run_id", b"run_id"]
    ) -> None: ...

global___SignalWithStartWorkflowExecutionResponse = (
    SignalWithStartWorkflowExecutionResponse
)

class ResetWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_FINISH_EVENT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESET_REAPPLY_TYPE_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    reason: typing.Text
    workflow_task_finish_event_id: builtins.int
    """The id of a `WORKFLOW_TASK_COMPLETED`,`WORKFLOW_TASK_TIMED_OUT`, `WORKFLOW_TASK_FAILED`, or
    `WORKFLOW_TASK_STARTED` event to reset to.
    """

    request_id: typing.Text
    """Used to de-dupe reset requests"""

    reset_reapply_type: temporalio.api.enums.v1.reset_pb2.ResetReapplyType.ValueType
    """Should be removed. Appears unused."""
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        reason: typing.Text = ...,
        workflow_task_finish_event_id: builtins.int = ...,
        request_id: typing.Text = ...,
        reset_reapply_type: temporalio.api.enums.v1.reset_pb2.ResetReapplyType.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "request_id",
            b"request_id",
            "reset_reapply_type",
            b"reset_reapply_type",
            "workflow_execution",
            b"workflow_execution",
            "workflow_task_finish_event_id",
            b"workflow_task_finish_event_id",
        ],
    ) -> None: ...

global___ResetWorkflowExecutionRequest = ResetWorkflowExecutionRequest

class ResetWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RUN_ID_FIELD_NUMBER: builtins.int
    run_id: typing.Text
    def __init__(
        self,
        *,
        run_id: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["run_id", b"run_id"]
    ) -> None: ...

global___ResetWorkflowExecutionResponse = ResetWorkflowExecutionResponse

class TerminateWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    FIRST_EXECUTION_RUN_ID_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    reason: typing.Text
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the termination event"""
        pass
    identity: typing.Text
    """The identity of the worker/client"""

    first_execution_run_id: typing.Text
    """If set, this call will error if the most recent (if no run id is set on
    `workflow_execution`), or specified (if it is) workflow execution is not part of the same
    execution chain as this id.
    """
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        workflow_execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        reason: typing.Text = ...,
        details: typing.Optional[temporalio.api.common.v1.message_pb2.Payloads] = ...,
        identity: typing.Text = ...,
        first_execution_run_id: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "details", b"details", "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "first_execution_run_id",
            b"first_execution_run_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___TerminateWorkflowExecutionRequest = TerminateWorkflowExecutionRequest

class TerminateWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___TerminateWorkflowExecutionResponse = TerminateWorkflowExecutionResponse

class ListOpenWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    START_TIME_FILTER_FIELD_NUMBER: builtins.int
    EXECUTION_FILTER_FIELD_NUMBER: builtins.int
    TYPE_FILTER_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def start_time_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.StartTimeFilter: ...
    @property
    def execution_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter: ...
    @property
    def type_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        start_time_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.StartTimeFilter
        ] = ...,
        execution_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter
        ] = ...,
        type_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "start_time_filter",
            b"start_time_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "start_time_filter",
            b"start_time_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["filters", b"filters"]
    ) -> typing.Optional[
        typing_extensions.Literal["execution_filter", "type_filter"]
    ]: ...

global___ListOpenWorkflowExecutionsRequest = ListOpenWorkflowExecutionsRequest

class ListOpenWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
            ]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListOpenWorkflowExecutionsResponse = ListOpenWorkflowExecutionsResponse

class ListClosedWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    START_TIME_FILTER_FIELD_NUMBER: builtins.int
    EXECUTION_FILTER_FIELD_NUMBER: builtins.int
    TYPE_FILTER_FIELD_NUMBER: builtins.int
    STATUS_FILTER_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def start_time_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.StartTimeFilter: ...
    @property
    def execution_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter: ...
    @property
    def type_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter: ...
    @property
    def status_filter(self) -> temporalio.api.filter.v1.message_pb2.StatusFilter: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        start_time_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.StartTimeFilter
        ] = ...,
        execution_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter
        ] = ...,
        type_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter
        ] = ...,
        status_filter: typing.Optional[
            temporalio.api.filter.v1.message_pb2.StatusFilter
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "start_time_filter",
            b"start_time_filter",
            "status_filter",
            b"status_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "start_time_filter",
            b"start_time_filter",
            "status_filter",
            b"status_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["filters", b"filters"]
    ) -> typing.Optional[
        typing_extensions.Literal["execution_filter", "type_filter", "status_filter"]
    ]: ...

global___ListClosedWorkflowExecutionsRequest = ListClosedWorkflowExecutionsRequest

class ListClosedWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
            ]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListClosedWorkflowExecutionsResponse = ListClosedWorkflowExecutionsResponse

class ListWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ListWorkflowExecutionsRequest = ListWorkflowExecutionsRequest

class ListWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
            ]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListWorkflowExecutionsResponse = ListWorkflowExecutionsResponse

class ListArchivedWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ListArchivedWorkflowExecutionsRequest = ListArchivedWorkflowExecutionsRequest

class ListArchivedWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
            ]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListArchivedWorkflowExecutionsResponse = ListArchivedWorkflowExecutionsResponse

class ScanWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ScanWorkflowExecutionsRequest = ScanWorkflowExecutionsRequest

class ScanWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
            ]
        ] = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ScanWorkflowExecutionsResponse = ScanWorkflowExecutionsResponse

class CountWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    query: typing.Text
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        query: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "query", b"query"
        ],
    ) -> None: ...

global___CountWorkflowExecutionsRequest = CountWorkflowExecutionsRequest

class CountWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    COUNT_FIELD_NUMBER: builtins.int
    count: builtins.int
    def __init__(
        self,
        *,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["count", b"count"]
    ) -> None: ...

global___CountWorkflowExecutionsResponse = CountWorkflowExecutionsResponse

class GetSearchAttributesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___GetSearchAttributesRequest = GetSearchAttributesRequest

class GetSearchAttributesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class KeysEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[
        typing.Text, temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType
    ]: ...
    def __init__(
        self,
        *,
        keys: typing.Optional[
            typing.Mapping[
                typing.Text,
                temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType,
            ]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["keys", b"keys"]
    ) -> None: ...

global___GetSearchAttributesResponse = GetSearchAttributesResponse

class RespondQueryTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TASK_TOKEN_FIELD_NUMBER: builtins.int
    COMPLETED_TYPE_FIELD_NUMBER: builtins.int
    QUERY_RESULT_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    completed_type: temporalio.api.enums.v1.query_pb2.QueryResultType.ValueType
    @property
    def query_result(self) -> temporalio.api.common.v1.message_pb2.Payloads: ...
    error_message: typing.Text
    namespace: typing.Text
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        completed_type: temporalio.api.enums.v1.query_pb2.QueryResultType.ValueType = ...,
        query_result: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
        error_message: typing.Text = ...,
        namespace: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["query_result", b"query_result"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "completed_type",
            b"completed_type",
            "error_message",
            b"error_message",
            "namespace",
            b"namespace",
            "query_result",
            b"query_result",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondQueryTaskCompletedRequest = RespondQueryTaskCompletedRequest

class RespondQueryTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___RespondQueryTaskCompletedResponse = RespondQueryTaskCompletedResponse

class ResetStickyTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "namespace", b"namespace"
        ],
    ) -> None: ...

global___ResetStickyTaskQueueRequest = ResetStickyTaskQueueRequest

class ResetStickyTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___ResetStickyTaskQueueResponse = ResetStickyTaskQueueResponse

class QueryWorkflowRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    QUERY_REJECT_CONDITION_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    @property
    def query(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery: ...
    query_reject_condition: temporalio.api.enums.v1.query_pb2.QueryRejectCondition.ValueType
    """QueryRejectCondition can used to reject the query if workflow state does not satisfy condition.
    Default: QUERY_REJECT_CONDITION_NONE.
    """
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
        query: typing.Optional[temporalio.api.query.v1.message_pb2.WorkflowQuery] = ...,
        query_reject_condition: temporalio.api.enums.v1.query_pb2.QueryRejectCondition.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "query", b"query"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "namespace",
            b"namespace",
            "query",
            b"query",
            "query_reject_condition",
            b"query_reject_condition",
        ],
    ) -> None: ...

global___QueryWorkflowRequest = QueryWorkflowRequest

class QueryWorkflowResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    QUERY_RESULT_FIELD_NUMBER: builtins.int
    QUERY_REJECTED_FIELD_NUMBER: builtins.int
    @property
    def query_result(self) -> temporalio.api.common.v1.message_pb2.Payloads: ...
    @property
    def query_rejected(self) -> temporalio.api.query.v1.message_pb2.QueryRejected: ...
    def __init__(
        self,
        *,
        query_result: typing.Optional[
            temporalio.api.common.v1.message_pb2.Payloads
        ] = ...,
        query_rejected: typing.Optional[
            temporalio.api.query.v1.message_pb2.QueryRejected
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "query_rejected", b"query_rejected", "query_result", b"query_result"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "query_rejected", b"query_rejected", "query_result", b"query_result"
        ],
    ) -> None: ...

global___QueryWorkflowResponse = QueryWorkflowResponse

class DescribeWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        execution: typing.Optional[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "namespace", b"namespace"
        ],
    ) -> None: ...

global___DescribeWorkflowExecutionRequest = DescribeWorkflowExecutionRequest

class DescribeWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXECUTION_CONFIG_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_INFO_FIELD_NUMBER: builtins.int
    PENDING_ACTIVITIES_FIELD_NUMBER: builtins.int
    PENDING_CHILDREN_FIELD_NUMBER: builtins.int
    PENDING_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    @property
    def execution_config(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.WorkflowExecutionConfig: ...
    @property
    def workflow_execution_info(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo: ...
    @property
    def pending_activities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.PendingActivityInfo
    ]: ...
    @property
    def pending_children(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.PendingChildExecutionInfo
    ]: ...
    @property
    def pending_workflow_task(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.PendingWorkflowTaskInfo: ...
    def __init__(
        self,
        *,
        execution_config: typing.Optional[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionConfig
        ] = ...,
        workflow_execution_info: typing.Optional[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ] = ...,
        pending_activities: typing.Optional[
            typing.Iterable[temporalio.api.workflow.v1.message_pb2.PendingActivityInfo]
        ] = ...,
        pending_children: typing.Optional[
            typing.Iterable[
                temporalio.api.workflow.v1.message_pb2.PendingChildExecutionInfo
            ]
        ] = ...,
        pending_workflow_task: typing.Optional[
            temporalio.api.workflow.v1.message_pb2.PendingWorkflowTaskInfo
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_config",
            b"execution_config",
            "pending_workflow_task",
            b"pending_workflow_task",
            "workflow_execution_info",
            b"workflow_execution_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_config",
            b"execution_config",
            "pending_activities",
            b"pending_activities",
            "pending_children",
            b"pending_children",
            "pending_workflow_task",
            b"pending_workflow_task",
            "workflow_execution_info",
            b"workflow_execution_info",
        ],
    ) -> None: ...

global___DescribeWorkflowExecutionResponse = DescribeWorkflowExecutionResponse

class DescribeTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_TYPE_FIELD_NUMBER: builtins.int
    INCLUDE_TASK_QUEUE_STATUS_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    task_queue_type: temporalio.api.enums.v1.task_queue_pb2.TaskQueueType.ValueType
    include_task_queue_status: builtins.bool
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
        task_queue_type: temporalio.api.enums.v1.task_queue_pb2.TaskQueueType.ValueType = ...,
        include_task_queue_status: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["task_queue", b"task_queue"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "include_task_queue_status",
            b"include_task_queue_status",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
            "task_queue_type",
            b"task_queue_type",
        ],
    ) -> None: ...

global___DescribeTaskQueueRequest = DescribeTaskQueueRequest

class DescribeTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    POLLERS_FIELD_NUMBER: builtins.int
    TASK_QUEUE_STATUS_FIELD_NUMBER: builtins.int
    @property
    def pollers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.PollerInfo
    ]: ...
    @property
    def task_queue_status(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueueStatus: ...
    def __init__(
        self,
        *,
        pollers: typing.Optional[
            typing.Iterable[temporalio.api.taskqueue.v1.message_pb2.PollerInfo]
        ] = ...,
        task_queue_status: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueueStatus
        ] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "task_queue_status", b"task_queue_status"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "pollers", b"pollers", "task_queue_status", b"task_queue_status"
        ],
    ) -> None: ...

global___DescribeTaskQueueResponse = DescribeTaskQueueResponse

class GetClusterInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___GetClusterInfoRequest = GetClusterInfoRequest

class GetClusterInfoResponse(google.protobuf.message.Message):
    """GetClusterInfoResponse contains information about Temporal cluster."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class SupportedClientsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(
            self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...
    SUPPORTED_CLIENTS_FIELD_NUMBER: builtins.int
    SERVER_VERSION_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    VERSION_INFO_FIELD_NUMBER: builtins.int
    CLUSTER_NAME_FIELD_NUMBER: builtins.int
    HISTORY_SHARD_COUNT_FIELD_NUMBER: builtins.int
    PERSISTENCE_STORE_FIELD_NUMBER: builtins.int
    VISIBILITY_STORE_FIELD_NUMBER: builtins.int
    @property
    def supported_clients(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Key is client name i.e "temporal-go", "temporal-java", or "temporal-cli".
        Value is ranges of supported versions of this client i.e ">1.1.1 <=1.4.0 || ^5.0.0".
        """
        pass
    server_version: typing.Text
    cluster_id: typing.Text
    @property
    def version_info(self) -> temporalio.api.version.v1.message_pb2.VersionInfo: ...
    cluster_name: typing.Text
    history_shard_count: builtins.int
    persistence_store: typing.Text
    visibility_store: typing.Text
    def __init__(
        self,
        *,
        supported_clients: typing.Optional[
            typing.Mapping[typing.Text, typing.Text]
        ] = ...,
        server_version: typing.Text = ...,
        cluster_id: typing.Text = ...,
        version_info: typing.Optional[
            temporalio.api.version.v1.message_pb2.VersionInfo
        ] = ...,
        cluster_name: typing.Text = ...,
        history_shard_count: builtins.int = ...,
        persistence_store: typing.Text = ...,
        visibility_store: typing.Text = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["version_info", b"version_info"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "cluster_id",
            b"cluster_id",
            "cluster_name",
            b"cluster_name",
            "history_shard_count",
            b"history_shard_count",
            "persistence_store",
            b"persistence_store",
            "server_version",
            b"server_version",
            "supported_clients",
            b"supported_clients",
            "version_info",
            b"version_info",
            "visibility_store",
            b"visibility_store",
        ],
    ) -> None: ...

global___GetClusterInfoResponse = GetClusterInfoResponse

class GetSystemInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(
        self,
    ) -> None: ...

global___GetSystemInfoRequest = GetSystemInfoRequest

class GetSystemInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Capabilities(google.protobuf.message.Message):
        """System capability details."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SIGNAL_AND_QUERY_HEADER_FIELD_NUMBER: builtins.int
        INTERNAL_ERROR_DIFFERENTIATION_FIELD_NUMBER: builtins.int
        ACTIVITY_FAILURE_INCLUDE_HEARTBEAT_FIELD_NUMBER: builtins.int
        signal_and_query_header: builtins.bool
        """True if signal and query headers are supported."""

        internal_error_differentiation: builtins.bool
        """True if internal errors are differentiated from other types of errors for purposes of
        retrying non-internal errors.

        When unset/false, clients retry all failures. When true, clients should only retry
        non-internal errors.
        """

        activity_failure_include_heartbeat: builtins.bool
        """True if RespondActivityTaskFailed API supports including heartbeat details"""
        def __init__(
            self,
            *,
            signal_and_query_header: builtins.bool = ...,
            internal_error_differentiation: builtins.bool = ...,
            activity_failure_include_heartbeat: builtins.bool = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "activity_failure_include_heartbeat",
                b"activity_failure_include_heartbeat",
                "internal_error_differentiation",
                b"internal_error_differentiation",
                "signal_and_query_header",
                b"signal_and_query_header",
            ],
        ) -> None: ...
    SERVER_VERSION_FIELD_NUMBER: builtins.int
    CAPABILITIES_FIELD_NUMBER: builtins.int
    server_version: typing.Text
    """Version of the server."""
    @property
    def capabilities(self) -> global___GetSystemInfoResponse.Capabilities:
        """All capabilities the system supports."""
        pass
    def __init__(
        self,
        *,
        server_version: typing.Text = ...,
        capabilities: typing.Optional[
            global___GetSystemInfoResponse.Capabilities
        ] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["capabilities", b"capabilities"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "capabilities", b"capabilities", "server_version", b"server_version"
        ],
    ) -> None: ...

global___GetSystemInfoResponse = GetSystemInfoResponse

class ListTaskQueuePartitionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    namespace: typing.Text
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    def __init__(
        self,
        *,
        namespace: typing.Text = ...,
        task_queue: typing.Optional[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        ] = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["task_queue", b"task_queue"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "task_queue", b"task_queue"
        ],
    ) -> None: ...

global___ListTaskQueuePartitionsRequest = ListTaskQueuePartitionsRequest

class ListTaskQueuePartitionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTIVITY_TASK_QUEUE_PARTITIONS_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_QUEUE_PARTITIONS_FIELD_NUMBER: builtins.int
    @property
    def activity_task_queue_partitions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
    ]: ...
    @property
    def workflow_task_queue_partitions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
    ]: ...
    def __init__(
        self,
        *,
        activity_task_queue_partitions: typing.Optional[
            typing.Iterable[
                temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
            ]
        ] = ...,
        workflow_task_queue_partitions: typing.Optional[
            typing.Iterable[
                temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
            ]
        ] = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_task_queue_partitions",
            b"activity_task_queue_partitions",
            "workflow_task_queue_partitions",
            b"workflow_task_queue_partitions",
        ],
    ) -> None: ...

global___ListTaskQueuePartitionsResponse = ListTaskQueuePartitionsResponse
