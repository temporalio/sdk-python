"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
The MIT License

Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import temporalio.api.batch.v1.message_pb2
import temporalio.api.command.v1.message_pb2
import temporalio.api.common.v1.message_pb2
import temporalio.api.enums.v1.batch_operation_pb2
import temporalio.api.enums.v1.common_pb2
import temporalio.api.enums.v1.failed_cause_pb2
import temporalio.api.enums.v1.namespace_pb2
import temporalio.api.enums.v1.query_pb2
import temporalio.api.enums.v1.reset_pb2
import temporalio.api.enums.v1.task_queue_pb2
import temporalio.api.enums.v1.workflow_pb2
import temporalio.api.failure.v1.message_pb2
import temporalio.api.filter.v1.message_pb2
import temporalio.api.history.v1.message_pb2
import temporalio.api.namespace.v1.message_pb2
import temporalio.api.protocol.v1.message_pb2
import temporalio.api.query.v1.message_pb2
import temporalio.api.replication.v1.message_pb2
import temporalio.api.schedule.v1.message_pb2
import temporalio.api.sdk.v1.task_complete_metadata_pb2
import temporalio.api.taskqueue.v1.message_pb2
import temporalio.api.update.v1.message_pb2
import temporalio.api.version.v1.message_pb2
import temporalio.api.workflow.v1.message_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class RegisterNamespaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    NAMESPACE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    OWNER_EMAIL_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_RETENTION_PERIOD_FIELD_NUMBER: builtins.int
    CLUSTERS_FIELD_NUMBER: builtins.int
    ACTIVE_CLUSTER_NAME_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    HISTORY_ARCHIVAL_STATE_FIELD_NUMBER: builtins.int
    HISTORY_ARCHIVAL_URI_FIELD_NUMBER: builtins.int
    VISIBILITY_ARCHIVAL_STATE_FIELD_NUMBER: builtins.int
    VISIBILITY_ARCHIVAL_URI_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    description: builtins.str
    owner_email: builtins.str
    @property
    def workflow_execution_retention_period(
        self,
    ) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def clusters(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.replication.v1.message_pb2.ClusterReplicationConfig
    ]: ...
    active_cluster_name: builtins.str
    @property
    def data(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A key-value map for any customized purpose."""
    security_token: builtins.str
    is_global_namespace: builtins.bool
    history_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType
    """If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used."""
    history_archival_uri: builtins.str
    visibility_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType
    """If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used."""
    visibility_archival_uri: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        description: builtins.str = ...,
        owner_email: builtins.str = ...,
        workflow_execution_retention_period: google.protobuf.duration_pb2.Duration
        | None = ...,
        clusters: collections.abc.Iterable[
            temporalio.api.replication.v1.message_pb2.ClusterReplicationConfig
        ]
        | None = ...,
        active_cluster_name: builtins.str = ...,
        data: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        security_token: builtins.str = ...,
        is_global_namespace: builtins.bool = ...,
        history_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType = ...,
        history_archival_uri: builtins.str = ...,
        visibility_archival_state: temporalio.api.enums.v1.namespace_pb2.ArchivalState.ValueType = ...,
        visibility_archival_uri: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution_retention_period",
            b"workflow_execution_retention_period",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "active_cluster_name",
            b"active_cluster_name",
            "clusters",
            b"clusters",
            "data",
            b"data",
            "description",
            b"description",
            "history_archival_state",
            b"history_archival_state",
            "history_archival_uri",
            b"history_archival_uri",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace",
            b"namespace",
            "owner_email",
            b"owner_email",
            "security_token",
            b"security_token",
            "visibility_archival_state",
            b"visibility_archival_state",
            "visibility_archival_uri",
            b"visibility_archival_uri",
            "workflow_execution_retention_period",
            b"workflow_execution_retention_period",
        ],
    ) -> None: ...

global___RegisterNamespaceRequest = RegisterNamespaceRequest

class RegisterNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RegisterNamespaceResponse = RegisterNamespaceResponse

class ListNamespacesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    NAMESPACE_FILTER_FIELD_NUMBER: builtins.int
    page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def namespace_filter(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceFilter: ...
    def __init__(
        self,
        *,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        namespace_filter: temporalio.api.namespace.v1.message_pb2.NamespaceFilter
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal["namespace_filter", b"namespace_filter"],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace_filter",
            b"namespace_filter",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
        ],
    ) -> None: ...

global___ListNamespacesRequest = ListNamespacesRequest

class ListNamespacesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def namespaces(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___DescribeNamespaceResponse
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        namespaces: collections.abc.Iterable[global___DescribeNamespaceResponse]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespaces", b"namespaces", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListNamespacesResponse = ListNamespacesResponse

class DescribeNamespaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    id: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["id", b"id", "namespace", b"namespace"],
    ) -> None: ...

global___DescribeNamespaceRequest = DescribeNamespaceRequest

class DescribeNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    FAILOVER_VERSION_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    FAILOVER_HISTORY_FIELD_NUMBER: builtins.int
    @property
    def namespace_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    failover_version: builtins.int
    is_global_namespace: builtins.bool
    @property
    def failover_history(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.replication.v1.message_pb2.FailoverStatus
    ]:
        """Contains the historical state of failover_versions for the cluster, truncated to contain only the last N
        states to ensure that the list does not grow unbounded.
        """
    def __init__(
        self,
        *,
        namespace_info: temporalio.api.namespace.v1.message_pb2.NamespaceInfo
        | None = ...,
        config: temporalio.api.namespace.v1.message_pb2.NamespaceConfig | None = ...,
        replication_config: temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        | None = ...,
        failover_version: builtins.int = ...,
        is_global_namespace: builtins.bool = ...,
        failover_history: collections.abc.Iterable[
            temporalio.api.replication.v1.message_pb2.FailoverStatus
        ]
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "failover_history",
            b"failover_history",
            "failover_version",
            b"failover_version",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> None: ...

global___DescribeNamespaceResponse = DescribeNamespaceResponse

class UpdateNamespaceRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134::request-mask-required=disabled
        aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
    (-- api-linter: core::0134::request-resource-required=disabled
        aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    UPDATE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    DELETE_BAD_BINARY_FIELD_NUMBER: builtins.int
    PROMOTE_NAMESPACE_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def update_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.UpdateNamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    security_token: builtins.str
    delete_bad_binary: builtins.str
    promote_namespace: builtins.bool
    """promote local namespace to global namespace. Ignored if namespace is already global namespace."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        update_info: temporalio.api.namespace.v1.message_pb2.UpdateNamespaceInfo
        | None = ...,
        config: temporalio.api.namespace.v1.message_pb2.NamespaceConfig | None = ...,
        replication_config: temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        | None = ...,
        security_token: builtins.str = ...,
        delete_bad_binary: builtins.str = ...,
        promote_namespace: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "replication_config",
            b"replication_config",
            "update_info",
            b"update_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "delete_bad_binary",
            b"delete_bad_binary",
            "namespace",
            b"namespace",
            "promote_namespace",
            b"promote_namespace",
            "replication_config",
            b"replication_config",
            "security_token",
            b"security_token",
            "update_info",
            b"update_info",
        ],
    ) -> None: ...

global___UpdateNamespaceRequest = UpdateNamespaceRequest

class UpdateNamespaceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_INFO_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    REPLICATION_CONFIG_FIELD_NUMBER: builtins.int
    FAILOVER_VERSION_FIELD_NUMBER: builtins.int
    IS_GLOBAL_NAMESPACE_FIELD_NUMBER: builtins.int
    @property
    def namespace_info(
        self,
    ) -> temporalio.api.namespace.v1.message_pb2.NamespaceInfo: ...
    @property
    def config(self) -> temporalio.api.namespace.v1.message_pb2.NamespaceConfig: ...
    @property
    def replication_config(
        self,
    ) -> temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig: ...
    failover_version: builtins.int
    is_global_namespace: builtins.bool
    def __init__(
        self,
        *,
        namespace_info: temporalio.api.namespace.v1.message_pb2.NamespaceInfo
        | None = ...,
        config: temporalio.api.namespace.v1.message_pb2.NamespaceConfig | None = ...,
        replication_config: temporalio.api.replication.v1.message_pb2.NamespaceReplicationConfig
        | None = ...,
        failover_version: builtins.int = ...,
        is_global_namespace: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "config",
            b"config",
            "failover_version",
            b"failover_version",
            "is_global_namespace",
            b"is_global_namespace",
            "namespace_info",
            b"namespace_info",
            "replication_config",
            b"replication_config",
        ],
    ) -> None: ...

global___UpdateNamespaceResponse = UpdateNamespaceResponse

class DeprecateNamespaceRequest(google.protobuf.message.Message):
    """Deprecated."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SECURITY_TOKEN_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    security_token: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        security_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "security_token", b"security_token"
        ],
    ) -> None: ...

global___DeprecateNamespaceRequest = DeprecateNamespaceRequest

class DeprecateNamespaceResponse(google.protobuf.message.Message):
    """Deprecated."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeprecateNamespaceResponse = DeprecateNamespaceResponse

class StartWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_RUN_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_TIMEOUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_REUSE_POLICY_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    CRON_SCHEDULE_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    REQUEST_EAGER_EXECUTION_FIELD_NUMBER: builtins.int
    CONTINUED_FAILURE_FIELD_NUMBER: builtins.int
    LAST_COMPLETION_RESULT_FIELD_NUMBER: builtins.int
    WORKFLOW_START_DELAY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    workflow_id: builtins.str
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized arguments to the workflow. These are passed as arguments to the workflow function."""
    @property
    def workflow_execution_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Total workflow execution timeout including retries and continue as new."""
    @property
    def workflow_run_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow run."""
    @property
    def workflow_task_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow task."""
    identity: builtins.str
    """The identity of the client who initiated this request"""
    request_id: builtins.str
    """A unique identifier for this start request. Typically UUIDv4."""
    workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType
    """Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE."""
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """The retry policy for the workflow. Will never exceed `workflow_execution_timeout`."""
    cron_schedule: builtins.str
    """See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/"""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo: ...
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header: ...
    request_eager_execution: builtins.bool
    """Request to get the first workflow task inline in the response bypassing matching service and worker polling.
    If set to `true` the caller is expected to have a worker available and capable of processing the task.
    The returned task will be marked as started and is expected to be completed by the specified
    `workflow_task_timeout`.
    """
    @property
    def continued_failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """These values will be available as ContinuedFailure and LastCompletionResult in the
        WorkflowExecutionStarted event and through SDKs. The are currently only used by the
        server itself (for the schedules feature) and are not intended to be exposed in
        StartWorkflowExecution.
        """
    @property
    def last_completion_result(
        self,
    ) -> temporalio.api.common.v1.message_pb2.Payloads: ...
    @property
    def workflow_start_delay(self) -> google.protobuf.duration_pb2.Duration:
        """Time to wait before dispatching the first workflow task. Cannot be used with `cron_schedule`.
        If the workflow gets a signal before the delay, a workflow task will be dispatched and the rest
        of the delay will be ignored.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        workflow_type: temporalio.api.common.v1.message_pb2.WorkflowType | None = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
        input: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        workflow_execution_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        workflow_run_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        workflow_task_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
        workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType = ...,
        retry_policy: temporalio.api.common.v1.message_pb2.RetryPolicy | None = ...,
        cron_schedule: builtins.str = ...,
        memo: temporalio.api.common.v1.message_pb2.Memo | None = ...,
        search_attributes: temporalio.api.common.v1.message_pb2.SearchAttributes
        | None = ...,
        header: temporalio.api.common.v1.message_pb2.Header | None = ...,
        request_eager_execution: builtins.bool = ...,
        continued_failure: temporalio.api.failure.v1.message_pb2.Failure | None = ...,
        last_completion_result: temporalio.api.common.v1.message_pb2.Payloads
        | None = ...,
        workflow_start_delay: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "continued_failure",
            b"continued_failure",
            "header",
            b"header",
            "input",
            b"input",
            "last_completion_result",
            b"last_completion_result",
            "memo",
            b"memo",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_start_delay",
            b"workflow_start_delay",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "continued_failure",
            b"continued_failure",
            "cron_schedule",
            b"cron_schedule",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "last_completion_result",
            b"last_completion_result",
            "memo",
            b"memo",
            "namespace",
            b"namespace",
            "request_eager_execution",
            b"request_eager_execution",
            "request_id",
            b"request_id",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_id",
            b"workflow_id",
            "workflow_id_reuse_policy",
            b"workflow_id_reuse_policy",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_start_delay",
            b"workflow_start_delay",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___StartWorkflowExecutionRequest = StartWorkflowExecutionRequest

class StartWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUN_ID_FIELD_NUMBER: builtins.int
    EAGER_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    run_id: builtins.str
    @property
    def eager_workflow_task(self) -> global___PollWorkflowTaskQueueResponse:
        """When `request_eager_execution` is set on the `StartWorkflowExecutionRequest`, the server - if supported - will
        return the first workflow task to be eagerly executed.
        The caller is expected to have a worker available to process the task.
        """
    def __init__(
        self,
        *,
        run_id: builtins.str = ...,
        eager_workflow_task: global___PollWorkflowTaskQueueResponse | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "eager_workflow_task", b"eager_workflow_task"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "eager_workflow_task", b"eager_workflow_task", "run_id", b"run_id"
        ],
    ) -> None: ...

global___StartWorkflowExecutionResponse = StartWorkflowExecutionResponse

class GetWorkflowExecutionHistoryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WAIT_NEW_EVENT_FIELD_NUMBER: builtins.int
    HISTORY_EVENT_FILTER_TYPE_FIELD_NUMBER: builtins.int
    SKIP_ARCHIVAL_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    """If a `GetWorkflowExecutionHistoryResponse` or a `PollWorkflowTaskQueueResponse` had one of
    these, it should be passed here to fetch the next page.
    """
    wait_new_event: builtins.bool
    """If set to true, the RPC call will not resolve until there is a new event which matches
    the `history_event_filter_type`, or a timeout is hit.
    """
    history_event_filter_type: temporalio.api.enums.v1.workflow_pb2.HistoryEventFilterType.ValueType
    """Filter returned events such that they match the specified filter type.
    Default: HISTORY_EVENT_FILTER_TYPE_ALL_EVENT.
    """
    skip_archival: builtins.bool
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        execution: temporalio.api.common.v1.message_pb2.WorkflowExecution | None = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        wait_new_event: builtins.bool = ...,
        history_event_filter_type: temporalio.api.enums.v1.workflow_pb2.HistoryEventFilterType.ValueType = ...,
        skip_archival: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "history_event_filter_type",
            b"history_event_filter_type",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "skip_archival",
            b"skip_archival",
            "wait_new_event",
            b"wait_new_event",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryRequest = GetWorkflowExecutionHistoryRequest

class GetWorkflowExecutionHistoryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HISTORY_FIELD_NUMBER: builtins.int
    RAW_HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    ARCHIVED_FIELD_NUMBER: builtins.int
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History: ...
    @property
    def raw_history(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.common.v1.message_pb2.DataBlob
    ]:
        """Raw history is an alternate representation of history that may be returned if configured on
        the frontend. This is not supported by all SDKs. Either this or `history` will be set.
        """
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response"""
    archived: builtins.bool
    def __init__(
        self,
        *,
        history: temporalio.api.history.v1.message_pb2.History | None = ...,
        raw_history: collections.abc.Iterable[
            temporalio.api.common.v1.message_pb2.DataBlob
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
        archived: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["history", b"history"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "archived",
            b"archived",
            "history",
            b"history",
            "next_page_token",
            b"next_page_token",
            "raw_history",
            b"raw_history",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryResponse = GetWorkflowExecutionHistoryResponse

class GetWorkflowExecutionHistoryReverseRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        execution: temporalio.api.common.v1.message_pb2.WorkflowExecution | None = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryReverseRequest = (
    GetWorkflowExecutionHistoryReverseRequest
)

class GetWorkflowExecutionHistoryReverseResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History: ...
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response"""
    def __init__(
        self,
        *,
        history: temporalio.api.history.v1.message_pb2.History | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["history", b"history"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "history", b"history", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___GetWorkflowExecutionHistoryReverseResponse = (
    GetWorkflowExecutionHistoryReverseResponse
)

class PollWorkflowTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    WORKER_VERSION_CAPABILITIES_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    identity: builtins.str
    """The identity of the worker/client who is polling this task queue"""
    binary_checksum: builtins.str
    """DEPRECATED since 1.21 - use `worker_version_capabilities` instead.
    Each worker process should provide an ID unique to the specific set of code it is running
    "checksum" in this field name isn't very accurate, it should be though of as an id.
    """
    @property
    def worker_version_capabilities(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkerVersionCapabilities:
        """Information about this worker's build identifier and if it is choosing to use the versioning
        feature. See the `WorkerVersionCapabilities` docstring for more.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
        identity: builtins.str = ...,
        binary_checksum: builtins.str = ...,
        worker_version_capabilities: temporalio.api.common.v1.message_pb2.WorkerVersionCapabilities
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "task_queue",
            b"task_queue",
            "worker_version_capabilities",
            b"worker_version_capabilities",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
            "worker_version_capabilities",
            b"worker_version_capabilities",
        ],
    ) -> None: ...

global___PollWorkflowTaskQueueRequest = PollWorkflowTaskQueueRequest

class PollWorkflowTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class QueriesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: temporalio.api.query.v1.message_pb2.WorkflowQuery | None = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    PREVIOUS_STARTED_EVENT_ID_FIELD_NUMBER: builtins.int
    STARTED_EVENT_ID_FIELD_NUMBER: builtins.int
    ATTEMPT_FIELD_NUMBER: builtins.int
    BACKLOG_COUNT_HINT_FIELD_NUMBER: builtins.int
    HISTORY_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TASK_QUEUE_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    STARTED_TIME_FIELD_NUMBER: builtins.int
    QUERIES_FIELD_NUMBER: builtins.int
    MESSAGES_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """A unique identifier for this task"""
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    previous_started_event_id: builtins.int
    """The last workflow task started event which was processed by some worker for this execution.
    Will be zero if no task has ever started.
    """
    started_event_id: builtins.int
    """The id of the most recent workflow task started event, which will have been generated as a
    result of this poll request being served.
    """
    attempt: builtins.int
    """Starting at 1, the number of attempts to complete this task by any worker."""
    backlog_count_hint: builtins.int
    """A hint that there are more tasks already present in this task queue. Can be used to
    prioritize draining a sticky queue before polling from a normal queue.
    """
    @property
    def history(self) -> temporalio.api.history.v1.message_pb2.History:
        """The history for this workflow, which will either be complete or partial. Partial histories
        are sent to workers who have signaled that they are using a sticky queue when completing
        a workflow task.
        """
    next_page_token: builtins.bytes
    """Will be set if there are more history events than were included in this response. Such events
    should be fetched via `GetWorkflowExecutionHistory`.
    """
    @property
    def query(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery:
        """Legacy queries appear in this field. The query must be responded to via
        `RespondQueryTaskCompleted`. If the workflow is already closed (queries are permitted on
        closed workflows) then the `history` field will be populated with the entire history. It
        may also be populated if this task originates on a non-sticky queue.
        """
    @property
    def workflow_execution_task_queue(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue:
        """The task queue this task originated from, which will always be the original non-sticky name
        for the queue, even if this response came from polling a sticky queue.
        """
    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When this task was scheduled by the server"""
    @property
    def started_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When the current workflow task started event was generated, meaning the current attempt."""
    @property
    def queries(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        builtins.str, temporalio.api.query.v1.message_pb2.WorkflowQuery
    ]:
        """Queries that should be executed after applying the history in this task. Responses should be
        attached to `RespondWorkflowTaskCompletedRequest::query_results`
        """
    @property
    def messages(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.protocol.v1.message_pb2.Message
    ]:
        """Protocol messages piggybacking on a WFT as a transport"""
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        workflow_type: temporalio.api.common.v1.message_pb2.WorkflowType | None = ...,
        previous_started_event_id: builtins.int = ...,
        started_event_id: builtins.int = ...,
        attempt: builtins.int = ...,
        backlog_count_hint: builtins.int = ...,
        history: temporalio.api.history.v1.message_pb2.History | None = ...,
        next_page_token: builtins.bytes = ...,
        query: temporalio.api.query.v1.message_pb2.WorkflowQuery | None = ...,
        workflow_execution_task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue
        | None = ...,
        scheduled_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        started_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        queries: collections.abc.Mapping[
            builtins.str, temporalio.api.query.v1.message_pb2.WorkflowQuery
        ]
        | None = ...,
        messages: collections.abc.Iterable[
            temporalio.api.protocol.v1.message_pb2.Message
        ]
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "history",
            b"history",
            "query",
            b"query",
            "scheduled_time",
            b"scheduled_time",
            "started_time",
            b"started_time",
            "workflow_execution",
            b"workflow_execution",
            "workflow_execution_task_queue",
            b"workflow_execution_task_queue",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "attempt",
            b"attempt",
            "backlog_count_hint",
            b"backlog_count_hint",
            "history",
            b"history",
            "messages",
            b"messages",
            "next_page_token",
            b"next_page_token",
            "previous_started_event_id",
            b"previous_started_event_id",
            "queries",
            b"queries",
            "query",
            b"query",
            "scheduled_time",
            b"scheduled_time",
            "started_event_id",
            b"started_event_id",
            "started_time",
            b"started_time",
            "task_token",
            b"task_token",
            "workflow_execution",
            b"workflow_execution",
            "workflow_execution_task_queue",
            b"workflow_execution_task_queue",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___PollWorkflowTaskQueueResponse = PollWorkflowTaskQueueResponse

class RespondWorkflowTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class QueryResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> temporalio.api.query.v1.message_pb2.WorkflowQueryResult: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: temporalio.api.query.v1.message_pb2.WorkflowQueryResult | None = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    COMMANDS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    STICKY_ATTRIBUTES_FIELD_NUMBER: builtins.int
    RETURN_NEW_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    FORCE_CREATE_NEW_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    QUERY_RESULTS_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKER_VERSION_STAMP_FIELD_NUMBER: builtins.int
    MESSAGES_FIELD_NUMBER: builtins.int
    SDK_METADATA_FIELD_NUMBER: builtins.int
    METERING_METADATA_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollWorkflowTaskQueueResponse`"""
    @property
    def commands(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.command.v1.message_pb2.Command
    ]:
        """A list of commands generated when driving the workflow code in response to the new task"""
    identity: builtins.str
    """The identity of the worker/client"""
    @property
    def sticky_attributes(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.StickyExecutionAttributes:
        """May be set by workers to indicate that the worker desires future tasks to be provided with
        incremental history on a sticky queue.
        """
    return_new_workflow_task: builtins.bool
    """If set, the worker wishes to immediately receive the next workflow task as a response to
    this completion. This can save on polling round-trips.
    """
    force_create_new_workflow_task: builtins.bool
    """Can be used to *force* creation of a new workflow task, even if no commands have resolved or
    one would not otherwise have been generated. This is used when the worker knows it is doing
    something useful, but cannot complete it within the workflow task timeout. Local activities
    which run for longer than the task timeout being the prime example.
    """
    binary_checksum: builtins.str
    """DEPRECATED since 1.21 - use `worker_version_stamp` instead.
    Worker process' unique binary id
    """
    @property
    def query_results(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        builtins.str, temporalio.api.query.v1.message_pb2.WorkflowQueryResult
    ]:
        """Responses to the `queries` field in the task being responded to"""
    namespace: builtins.str
    @property
    def worker_version_stamp(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkerVersionStamp:
        """Version info of the worker who processed this task. This message's `build_id` field should
        always be set by SDKs. Workers opting into versioning will also set the `use_versioning`
        field to true. See message docstrings for more.
        """
    @property
    def messages(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.protocol.v1.message_pb2.Message
    ]:
        """Protocol messages piggybacking on a WFT as a transport"""
    @property
    def sdk_metadata(
        self,
    ) -> temporalio.api.sdk.v1.task_complete_metadata_pb2.WorkflowTaskCompletedMetadata:
        """Data the SDK wishes to record for itself, but server need not interpret, and does not
        directly impact workflow state.
        """
    @property
    def metering_metadata(
        self,
    ) -> temporalio.api.common.v1.message_pb2.MeteringMetadata:
        """Local usage data collected for metering"""
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        commands: collections.abc.Iterable[
            temporalio.api.command.v1.message_pb2.Command
        ]
        | None = ...,
        identity: builtins.str = ...,
        sticky_attributes: temporalio.api.taskqueue.v1.message_pb2.StickyExecutionAttributes
        | None = ...,
        return_new_workflow_task: builtins.bool = ...,
        force_create_new_workflow_task: builtins.bool = ...,
        binary_checksum: builtins.str = ...,
        query_results: collections.abc.Mapping[
            builtins.str, temporalio.api.query.v1.message_pb2.WorkflowQueryResult
        ]
        | None = ...,
        namespace: builtins.str = ...,
        worker_version_stamp: temporalio.api.common.v1.message_pb2.WorkerVersionStamp
        | None = ...,
        messages: collections.abc.Iterable[
            temporalio.api.protocol.v1.message_pb2.Message
        ]
        | None = ...,
        sdk_metadata: temporalio.api.sdk.v1.task_complete_metadata_pb2.WorkflowTaskCompletedMetadata
        | None = ...,
        metering_metadata: temporalio.api.common.v1.message_pb2.MeteringMetadata
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "metering_metadata",
            b"metering_metadata",
            "sdk_metadata",
            b"sdk_metadata",
            "sticky_attributes",
            b"sticky_attributes",
            "worker_version_stamp",
            b"worker_version_stamp",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "commands",
            b"commands",
            "force_create_new_workflow_task",
            b"force_create_new_workflow_task",
            "identity",
            b"identity",
            "messages",
            b"messages",
            "metering_metadata",
            b"metering_metadata",
            "namespace",
            b"namespace",
            "query_results",
            b"query_results",
            "return_new_workflow_task",
            b"return_new_workflow_task",
            "sdk_metadata",
            b"sdk_metadata",
            "sticky_attributes",
            b"sticky_attributes",
            "task_token",
            b"task_token",
            "worker_version_stamp",
            b"worker_version_stamp",
        ],
    ) -> None: ...

global___RespondWorkflowTaskCompletedRequest = RespondWorkflowTaskCompletedRequest

class RespondWorkflowTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    ACTIVITY_TASKS_FIELD_NUMBER: builtins.int
    RESET_HISTORY_EVENT_ID_FIELD_NUMBER: builtins.int
    @property
    def workflow_task(self) -> global___PollWorkflowTaskQueueResponse:
        """See `RespondWorkflowTaskCompletedResponse::return_new_workflow_task`"""
    @property
    def activity_tasks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PollActivityTaskQueueResponse
    ]:
        """See `ScheduleActivityTaskCommandAttributes::request_start`"""
    reset_history_event_id: builtins.int
    def __init__(
        self,
        *,
        workflow_task: global___PollWorkflowTaskQueueResponse | None = ...,
        activity_tasks: collections.abc.Iterable[global___PollActivityTaskQueueResponse]
        | None = ...,
        reset_history_event_id: builtins.int = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["workflow_task", b"workflow_task"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_tasks",
            b"activity_tasks",
            "reset_history_event_id",
            b"reset_history_event_id",
            "workflow_task",
            b"workflow_task",
        ],
    ) -> None: ...

global___RespondWorkflowTaskCompletedResponse = RespondWorkflowTaskCompletedResponse

class RespondWorkflowTaskFailedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    CAUSE_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    BINARY_CHECKSUM_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    MESSAGES_FIELD_NUMBER: builtins.int
    WORKER_VERSION_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollWorkflowTaskQueueResponse`"""
    cause: temporalio.api.enums.v1.failed_cause_pb2.WorkflowTaskFailedCause.ValueType
    """Why did the task fail? It's important to note that many of the variants in this enum cannot
    apply to worker responses. See the type's doc for more.
    """
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Failure details"""
    identity: builtins.str
    """The identity of the worker/client"""
    binary_checksum: builtins.str
    """DEPRECATED since 1.21 - use `worker_version_stamp` instead.
    Worker process' unique binary id
    """
    namespace: builtins.str
    @property
    def messages(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.protocol.v1.message_pb2.Message
    ]:
        """Protocol messages piggybacking on a WFT as a transport"""
    @property
    def worker_version(self) -> temporalio.api.common.v1.message_pb2.WorkerVersionStamp:
        """Version info of the worker who processed this task. This message's `build_id` field should
        always be set by SDKs. Workers opting into versioning will also set the `use_versioning`
        field to true. See message docstrings for more.
        """
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        cause: temporalio.api.enums.v1.failed_cause_pb2.WorkflowTaskFailedCause.ValueType = ...,
        failure: temporalio.api.failure.v1.message_pb2.Failure | None = ...,
        identity: builtins.str = ...,
        binary_checksum: builtins.str = ...,
        namespace: builtins.str = ...,
        messages: collections.abc.Iterable[
            temporalio.api.protocol.v1.message_pb2.Message
        ]
        | None = ...,
        worker_version: temporalio.api.common.v1.message_pb2.WorkerVersionStamp
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "failure", b"failure", "worker_version", b"worker_version"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "binary_checksum",
            b"binary_checksum",
            "cause",
            b"cause",
            "failure",
            b"failure",
            "identity",
            b"identity",
            "messages",
            b"messages",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
            "worker_version",
            b"worker_version",
        ],
    ) -> None: ...

global___RespondWorkflowTaskFailedRequest = RespondWorkflowTaskFailedRequest

class RespondWorkflowTaskFailedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondWorkflowTaskFailedResponse = RespondWorkflowTaskFailedResponse

class PollActivityTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    TASK_QUEUE_METADATA_FIELD_NUMBER: builtins.int
    WORKER_VERSION_CAPABILITIES_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    identity: builtins.str
    """The identity of the worker/client"""
    @property
    def task_queue_metadata(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueueMetadata: ...
    @property
    def worker_version_capabilities(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkerVersionCapabilities:
        """Information about this worker's build identifier and if it is choosing to use the versioning
        feature. See the `WorkerVersionCapabilities` docstring for more.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
        identity: builtins.str = ...,
        task_queue_metadata: temporalio.api.taskqueue.v1.message_pb2.TaskQueueMetadata
        | None = ...,
        worker_version_capabilities: temporalio.api.common.v1.message_pb2.WorkerVersionCapabilities
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "task_queue",
            b"task_queue",
            "task_queue_metadata",
            b"task_queue_metadata",
            "worker_version_capabilities",
            b"worker_version_capabilities",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
            "task_queue_metadata",
            b"task_queue_metadata",
            "worker_version_capabilities",
            b"worker_version_capabilities",
        ],
    ) -> None: ...

global___PollActivityTaskQueueRequest = PollActivityTaskQueueRequest

class PollActivityTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    WORKFLOW_NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    ACTIVITY_TYPE_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    CURRENT_ATTEMPT_SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    STARTED_TIME_FIELD_NUMBER: builtins.int
    ATTEMPT_FIELD_NUMBER: builtins.int
    SCHEDULE_TO_CLOSE_TIMEOUT_FIELD_NUMBER: builtins.int
    START_TO_CLOSE_TIMEOUT_FIELD_NUMBER: builtins.int
    HEARTBEAT_TIMEOUT_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """A unique identifier for this task"""
    workflow_namespace: builtins.str
    """The namespace the workflow which requested this activity lives in"""
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType:
        """Type of the requesting workflow"""
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution:
        """Execution info of the requesting workflow"""
    @property
    def activity_type(self) -> temporalio.api.common.v1.message_pb2.ActivityType: ...
    activity_id: builtins.str
    """The autogenerated or user specified identifier of this activity. Can be used to complete the
    activity via `RespondActivityTaskCompletedById`. May be re-used as long as the last usage
    has resolved, but unique IDs for every activity invocation is a good idea.
    """
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header:
        """Headers specified by the scheduling workflow. Commonly used to propagate contextual info
        from the workflow to its activities. For example, tracing contexts.
        """
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arguments to the activity invocation"""
    @property
    def heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Details of the last heartbeat that was recorded for this activity as of the time this task
        was delivered.
        """
    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task first scheduled"""
    @property
    def current_attempt_scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task attempt scheduled"""
    @property
    def started_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """When was this task started (this attempt)"""
    attempt: builtins.int
    """Starting at 1, the number of attempts to perform this activity"""
    @property
    def schedule_to_close_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """First scheduled -> final result reported timeout

        (-- api-linter: core::0140::prepositions=disabled
            aip.dev/not-precedent: "to" is used to indicate interval. --)
        """
    @property
    def start_to_close_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Current attempt start -> final result reported timeout

        (-- api-linter: core::0140::prepositions=disabled
            aip.dev/not-precedent: "to" is used to indicate interval. --)
        """
    @property
    def heartbeat_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Window within which the activity must report a heartbeat, or be timed out."""
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """This is the retry policy the service uses which may be different from the one provided
        (or not) during activity scheduling. The service can override the provided one if some
        values are not specified or exceed configured system limits.
        """
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        workflow_namespace: builtins.str = ...,
        workflow_type: temporalio.api.common.v1.message_pb2.WorkflowType | None = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        activity_type: temporalio.api.common.v1.message_pb2.ActivityType | None = ...,
        activity_id: builtins.str = ...,
        header: temporalio.api.common.v1.message_pb2.Header | None = ...,
        input: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        heartbeat_details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        scheduled_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        current_attempt_scheduled_time: google.protobuf.timestamp_pb2.Timestamp
        | None = ...,
        started_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        attempt: builtins.int = ...,
        schedule_to_close_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        start_to_close_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        heartbeat_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        retry_policy: temporalio.api.common.v1.message_pb2.RetryPolicy | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "activity_type",
            b"activity_type",
            "current_attempt_scheduled_time",
            b"current_attempt_scheduled_time",
            "header",
            b"header",
            "heartbeat_details",
            b"heartbeat_details",
            "heartbeat_timeout",
            b"heartbeat_timeout",
            "input",
            b"input",
            "retry_policy",
            b"retry_policy",
            "schedule_to_close_timeout",
            b"schedule_to_close_timeout",
            "scheduled_time",
            b"scheduled_time",
            "start_to_close_timeout",
            b"start_to_close_timeout",
            "started_time",
            b"started_time",
            "workflow_execution",
            b"workflow_execution",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "activity_type",
            b"activity_type",
            "attempt",
            b"attempt",
            "current_attempt_scheduled_time",
            b"current_attempt_scheduled_time",
            "header",
            b"header",
            "heartbeat_details",
            b"heartbeat_details",
            "heartbeat_timeout",
            b"heartbeat_timeout",
            "input",
            b"input",
            "retry_policy",
            b"retry_policy",
            "schedule_to_close_timeout",
            b"schedule_to_close_timeout",
            "scheduled_time",
            b"scheduled_time",
            "start_to_close_timeout",
            b"start_to_close_timeout",
            "started_time",
            b"started_time",
            "task_token",
            b"task_token",
            "workflow_execution",
            b"workflow_execution",
            "workflow_namespace",
            b"workflow_namespace",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___PollActivityTaskQueueResponse = PollActivityTaskQueueResponse

class RecordActivityTaskHeartbeatRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arbitrary data, of which the most recent call is kept, to store for this activity"""
    identity: builtins.str
    """The identity of the worker/client"""
    namespace: builtins.str
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
        namespace: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RecordActivityTaskHeartbeatRequest = RecordActivityTaskHeartbeatRequest

class RecordActivityTaskHeartbeatResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CANCEL_REQUESTED_FIELD_NUMBER: builtins.int
    cancel_requested: builtins.bool
    """Will be set to true if the activity has been asked to cancel itself. The SDK should then
    notify the activity of cancellation if it is still running.
    """
    def __init__(
        self,
        *,
        cancel_requested: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["cancel_requested", b"cancel_requested"],
    ) -> None: ...

global___RecordActivityTaskHeartbeatResponse = RecordActivityTaskHeartbeatResponse

class RecordActivityTaskHeartbeatByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace of the workflow which scheduled this activity"""
    workflow_id: builtins.str
    """Id of the workflow which scheduled this activity"""
    run_id: builtins.str
    """Run Id of the workflow which scheduled this activity"""
    activity_id: builtins.str
    """Id of the activity we're heartbeating"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Arbitrary data, of which the most recent call is kept, to store for this activity"""
    identity: builtins.str
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        run_id: builtins.str = ...,
        activity_id: builtins.str = ...,
        details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RecordActivityTaskHeartbeatByIdRequest = RecordActivityTaskHeartbeatByIdRequest

class RecordActivityTaskHeartbeatByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CANCEL_REQUESTED_FIELD_NUMBER: builtins.int
    cancel_requested: builtins.bool
    """Will be set to true if the activity has been asked to cancel itself. The SDK should then
    notify the activity of cancellation if it is still running.
    """
    def __init__(
        self,
        *,
        cancel_requested: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["cancel_requested", b"cancel_requested"],
    ) -> None: ...

global___RecordActivityTaskHeartbeatByIdResponse = (
    RecordActivityTaskHeartbeatByIdResponse
)

class RespondActivityTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKER_VERSION_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def result(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """The result of successfully executing the activity"""
    identity: builtins.str
    """The identity of the worker/client"""
    namespace: builtins.str
    @property
    def worker_version(self) -> temporalio.api.common.v1.message_pb2.WorkerVersionStamp:
        """Version info of the worker who processed this task. This message's `build_id` field should
        always be set by SDKs. Workers opting into versioning will also set the `use_versioning`
        field to true. See message docstrings for more.
        """
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        result: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
        namespace: builtins.str = ...,
        worker_version: temporalio.api.common.v1.message_pb2.WorkerVersionStamp
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "result", b"result", "worker_version", b"worker_version"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "result",
            b"result",
            "task_token",
            b"task_token",
            "worker_version",
            b"worker_version",
        ],
    ) -> None: ...

global___RespondActivityTaskCompletedRequest = RespondActivityTaskCompletedRequest

class RespondActivityTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCompletedResponse = RespondActivityTaskCompletedResponse

class RespondActivityTaskCompletedByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace of the workflow which scheduled this activity"""
    workflow_id: builtins.str
    """Id of the workflow which scheduled this activity"""
    run_id: builtins.str
    """Run Id of the workflow which scheduled this activity"""
    activity_id: builtins.str
    """Id of the activity to complete"""
    @property
    def result(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """The serialized result of activity execution"""
    identity: builtins.str
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        run_id: builtins.str = ...,
        activity_id: builtins.str = ...,
        result: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["result", b"result"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "result",
            b"result",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskCompletedByIdRequest = (
    RespondActivityTaskCompletedByIdRequest
)

class RespondActivityTaskCompletedByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCompletedByIdResponse = (
    RespondActivityTaskCompletedByIdResponse
)

class RespondActivityTaskFailedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    LAST_HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    WORKER_VERSION_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Detailed failure information"""
    identity: builtins.str
    """The identity of the worker/client"""
    namespace: builtins.str
    @property
    def last_heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Additional details to be stored as last activity heartbeat"""
    @property
    def worker_version(self) -> temporalio.api.common.v1.message_pb2.WorkerVersionStamp:
        """Version info of the worker who processed this task. This message's `build_id` field should
        always be set by SDKs. Workers opting into versioning will also set the `use_versioning`
        field to true. See message docstrings for more.
        """
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        failure: temporalio.api.failure.v1.message_pb2.Failure | None = ...,
        identity: builtins.str = ...,
        namespace: builtins.str = ...,
        last_heartbeat_details: temporalio.api.common.v1.message_pb2.Payloads
        | None = ...,
        worker_version: temporalio.api.common.v1.message_pb2.WorkerVersionStamp
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "failure",
            b"failure",
            "last_heartbeat_details",
            b"last_heartbeat_details",
            "worker_version",
            b"worker_version",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "failure",
            b"failure",
            "identity",
            b"identity",
            "last_heartbeat_details",
            b"last_heartbeat_details",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
            "worker_version",
            b"worker_version",
        ],
    ) -> None: ...

global___RespondActivityTaskFailedRequest = RespondActivityTaskFailedRequest

class RespondActivityTaskFailedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FAILURES_FIELD_NUMBER: builtins.int
    @property
    def failures(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.failure.v1.message_pb2.Failure
    ]:
        """Server validation failures could include
        last_heartbeat_details payload is too large, request failure is too large
        """
    def __init__(
        self,
        *,
        failures: collections.abc.Iterable[
            temporalio.api.failure.v1.message_pb2.Failure
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["failures", b"failures"]
    ) -> None: ...

global___RespondActivityTaskFailedResponse = RespondActivityTaskFailedResponse

class RespondActivityTaskFailedByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    FAILURE_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    LAST_HEARTBEAT_DETAILS_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace of the workflow which scheduled this activity"""
    workflow_id: builtins.str
    """Id of the workflow which scheduled this activity"""
    run_id: builtins.str
    """Run Id of the workflow which scheduled this activity"""
    activity_id: builtins.str
    """Id of the activity to fail"""
    @property
    def failure(self) -> temporalio.api.failure.v1.message_pb2.Failure:
        """Detailed failure information"""
    identity: builtins.str
    """The identity of the worker/client"""
    @property
    def last_heartbeat_details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Additional details to be stored as last activity heartbeat"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        run_id: builtins.str = ...,
        activity_id: builtins.str = ...,
        failure: temporalio.api.failure.v1.message_pb2.Failure | None = ...,
        identity: builtins.str = ...,
        last_heartbeat_details: temporalio.api.common.v1.message_pb2.Payloads
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "failure", b"failure", "last_heartbeat_details", b"last_heartbeat_details"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "failure",
            b"failure",
            "identity",
            b"identity",
            "last_heartbeat_details",
            b"last_heartbeat_details",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskFailedByIdRequest = RespondActivityTaskFailedByIdRequest

class RespondActivityTaskFailedByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FAILURES_FIELD_NUMBER: builtins.int
    @property
    def failures(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.failure.v1.message_pb2.Failure
    ]:
        """Server validation failures could include
        last_heartbeat_details payload is too large, request failure is too large
        """
    def __init__(
        self,
        *,
        failures: collections.abc.Iterable[
            temporalio.api.failure.v1.message_pb2.Failure
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["failures", b"failures"]
    ) -> None: ...

global___RespondActivityTaskFailedByIdResponse = RespondActivityTaskFailedByIdResponse

class RespondActivityTaskCanceledRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKER_VERSION_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    """The task token as received in `PollActivityTaskQueueResponse`"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the cancellation"""
    identity: builtins.str
    """The identity of the worker/client"""
    namespace: builtins.str
    @property
    def worker_version(self) -> temporalio.api.common.v1.message_pb2.WorkerVersionStamp:
        """Version info of the worker who processed this task. This message's `build_id` field should
        always be set by SDKs. Workers opting into versioning will also set the `use_versioning`
        field to true. See message docstrings for more.
        """
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
        namespace: builtins.str = ...,
        worker_version: temporalio.api.common.v1.message_pb2.WorkerVersionStamp
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "details", b"details", "worker_version", b"worker_version"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "task_token",
            b"task_token",
            "worker_version",
            b"worker_version",
        ],
    ) -> None: ...

global___RespondActivityTaskCanceledRequest = RespondActivityTaskCanceledRequest

class RespondActivityTaskCanceledResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCanceledResponse = RespondActivityTaskCanceledResponse

class RespondActivityTaskCanceledByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    ACTIVITY_ID_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace of the workflow which scheduled this activity"""
    workflow_id: builtins.str
    """Id of the workflow which scheduled this activity"""
    run_id: builtins.str
    """Run Id of the workflow which scheduled this activity"""
    activity_id: builtins.str
    """Id of the activity to confirm is cancelled"""
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the cancellation"""
    identity: builtins.str
    """The identity of the worker/client"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        run_id: builtins.str = ...,
        activity_id: builtins.str = ...,
        details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["details", b"details"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_id",
            b"activity_id",
            "details",
            b"details",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "run_id",
            b"run_id",
            "workflow_id",
            b"workflow_id",
        ],
    ) -> None: ...

global___RespondActivityTaskCanceledByIdRequest = RespondActivityTaskCanceledByIdRequest

class RespondActivityTaskCanceledByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondActivityTaskCanceledByIdResponse = (
    RespondActivityTaskCanceledByIdResponse
)

class RequestCancelWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    FIRST_EXECUTION_RUN_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    identity: builtins.str
    """The identity of the worker/client"""
    request_id: builtins.str
    """Used to de-dupe cancellation requests"""
    first_execution_run_id: builtins.str
    """If set, this call will error if the most recent (if no run id is set on
    `workflow_execution`), or specified (if it is) workflow execution is not part of the same
    execution chain as this id.
    """
    reason: builtins.str
    """Reason for requesting the cancellation"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
        first_execution_run_id: builtins.str = ...,
        reason: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "first_execution_run_id",
            b"first_execution_run_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "request_id",
            b"request_id",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___RequestCancelWorkflowExecutionRequest = RequestCancelWorkflowExecutionRequest

class RequestCancelWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RequestCancelWorkflowExecutionResponse = RequestCancelWorkflowExecutionResponse

class SignalWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    SIGNAL_NAME_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    SKIP_GENERATE_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    signal_name: builtins.str
    """The workflow author-defined name of the signal to send to the workflow"""
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized value(s) to provide with the signal"""
    identity: builtins.str
    """The identity of the worker/client"""
    request_id: builtins.str
    """Used to de-dupe sent signals"""
    control: builtins.str
    """Deprecated"""
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header:
        """Headers that are passed with the signal to the processing workflow.
        These can include things like auth or tracing tokens.
        """
    skip_generate_workflow_task: builtins.bool
    """Indicates that a new workflow task should not be generated when this signal is received."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        signal_name: builtins.str = ...,
        input: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
        control: builtins.str = ...,
        header: temporalio.api.common.v1.message_pb2.Header | None = ...,
        skip_generate_workflow_task: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "header",
            b"header",
            "input",
            b"input",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "control",
            b"control",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "signal_name",
            b"signal_name",
            "skip_generate_workflow_task",
            b"skip_generate_workflow_task",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___SignalWorkflowExecutionRequest = SignalWorkflowExecutionRequest

class SignalWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___SignalWorkflowExecutionResponse = SignalWorkflowExecutionResponse

class SignalWithStartWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_TYPE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_RUN_TIMEOUT_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_TIMEOUT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_REUSE_POLICY_FIELD_NUMBER: builtins.int
    SIGNAL_NAME_FIELD_NUMBER: builtins.int
    SIGNAL_INPUT_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    CRON_SCHEDULE_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    WORKFLOW_START_DELAY_FIELD_NUMBER: builtins.int
    SKIP_GENERATE_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    workflow_id: builtins.str
    @property
    def workflow_type(self) -> temporalio.api.common.v1.message_pb2.WorkflowType: ...
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue:
        """The task queue to start this workflow on, if it will be started"""
    @property
    def input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized arguments to the workflow. These are passed as arguments to the workflow function."""
    @property
    def workflow_execution_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Total workflow execution timeout including retries and continue as new"""
    @property
    def workflow_run_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow run"""
    @property
    def workflow_task_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Timeout of a single workflow task"""
    identity: builtins.str
    """The identity of the worker/client"""
    request_id: builtins.str
    """Used to de-dupe signal w/ start requests"""
    workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType
    signal_name: builtins.str
    """The workflow author-defined name of the signal to send to the workflow"""
    @property
    def signal_input(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized value(s) to provide with the signal"""
    control: builtins.str
    """Deprecated"""
    @property
    def retry_policy(self) -> temporalio.api.common.v1.message_pb2.RetryPolicy:
        """Retry policy for the workflow Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE."""
    cron_schedule: builtins.str
    """See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/"""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo: ...
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    @property
    def header(self) -> temporalio.api.common.v1.message_pb2.Header: ...
    @property
    def workflow_start_delay(self) -> google.protobuf.duration_pb2.Duration:
        """Time to wait before dispatching the first workflow task. Cannot be used with `cron_schedule`.
        Note that the signal will be delivered with the first workflow task. If the workflow gets
        another SignalWithStartWorkflow before the delay and `skip_generate_workflow_task` is false
        or not set, a workflow task will be dispatched immediately and the rest of the delay period
        will be ignored, even if that request also had a delay. Signal via SignalWorkflowExecution
        will not unblock the workflow.
        """
    skip_generate_workflow_task: builtins.bool
    """Indicates that a new workflow task should not be generated when this signal is received."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_id: builtins.str = ...,
        workflow_type: temporalio.api.common.v1.message_pb2.WorkflowType | None = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
        input: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        workflow_execution_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        workflow_run_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        workflow_task_timeout: google.protobuf.duration_pb2.Duration | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
        workflow_id_reuse_policy: temporalio.api.enums.v1.workflow_pb2.WorkflowIdReusePolicy.ValueType = ...,
        signal_name: builtins.str = ...,
        signal_input: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        control: builtins.str = ...,
        retry_policy: temporalio.api.common.v1.message_pb2.RetryPolicy | None = ...,
        cron_schedule: builtins.str = ...,
        memo: temporalio.api.common.v1.message_pb2.Memo | None = ...,
        search_attributes: temporalio.api.common.v1.message_pb2.SearchAttributes
        | None = ...,
        header: temporalio.api.common.v1.message_pb2.Header | None = ...,
        workflow_start_delay: google.protobuf.duration_pb2.Duration | None = ...,
        skip_generate_workflow_task: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "header",
            b"header",
            "input",
            b"input",
            "memo",
            b"memo",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "signal_input",
            b"signal_input",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_start_delay",
            b"workflow_start_delay",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "control",
            b"control",
            "cron_schedule",
            b"cron_schedule",
            "header",
            b"header",
            "identity",
            b"identity",
            "input",
            b"input",
            "memo",
            b"memo",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "retry_policy",
            b"retry_policy",
            "search_attributes",
            b"search_attributes",
            "signal_input",
            b"signal_input",
            "signal_name",
            b"signal_name",
            "skip_generate_workflow_task",
            b"skip_generate_workflow_task",
            "task_queue",
            b"task_queue",
            "workflow_execution_timeout",
            b"workflow_execution_timeout",
            "workflow_id",
            b"workflow_id",
            "workflow_id_reuse_policy",
            b"workflow_id_reuse_policy",
            "workflow_run_timeout",
            b"workflow_run_timeout",
            "workflow_start_delay",
            b"workflow_start_delay",
            "workflow_task_timeout",
            b"workflow_task_timeout",
            "workflow_type",
            b"workflow_type",
        ],
    ) -> None: ...

global___SignalWithStartWorkflowExecutionRequest = (
    SignalWithStartWorkflowExecutionRequest
)

class SignalWithStartWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUN_ID_FIELD_NUMBER: builtins.int
    run_id: builtins.str
    def __init__(
        self,
        *,
        run_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["run_id", b"run_id"]
    ) -> None: ...

global___SignalWithStartWorkflowExecutionResponse = (
    SignalWithStartWorkflowExecutionResponse
)

class ResetWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_FINISH_EVENT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESET_REAPPLY_TYPE_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    reason: builtins.str
    workflow_task_finish_event_id: builtins.int
    """The id of a `WORKFLOW_TASK_COMPLETED`,`WORKFLOW_TASK_TIMED_OUT`, `WORKFLOW_TASK_FAILED`, or
    `WORKFLOW_TASK_STARTED` event to reset to.
    """
    request_id: builtins.str
    """Used to de-dupe reset requests"""
    reset_reapply_type: temporalio.api.enums.v1.reset_pb2.ResetReapplyType.ValueType
    """Reset reapplay(replay) options."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        reason: builtins.str = ...,
        workflow_task_finish_event_id: builtins.int = ...,
        request_id: builtins.str = ...,
        reset_reapply_type: temporalio.api.enums.v1.reset_pb2.ResetReapplyType.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "request_id",
            b"request_id",
            "reset_reapply_type",
            b"reset_reapply_type",
            "workflow_execution",
            b"workflow_execution",
            "workflow_task_finish_event_id",
            b"workflow_task_finish_event_id",
        ],
    ) -> None: ...

global___ResetWorkflowExecutionRequest = ResetWorkflowExecutionRequest

class ResetWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUN_ID_FIELD_NUMBER: builtins.int
    run_id: builtins.str
    def __init__(
        self,
        *,
        run_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["run_id", b"run_id"]
    ) -> None: ...

global___ResetWorkflowExecutionResponse = ResetWorkflowExecutionResponse

class TerminateWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    FIRST_EXECUTION_RUN_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    reason: builtins.str
    @property
    def details(self) -> temporalio.api.common.v1.message_pb2.Payloads:
        """Serialized additional information to attach to the termination event"""
    identity: builtins.str
    """The identity of the worker/client"""
    first_execution_run_id: builtins.str
    """If set, this call will error if the most recent (if no run id is set on
    `workflow_execution`), or specified (if it is) workflow execution is not part of the same
    execution chain as this id.
    """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        reason: builtins.str = ...,
        details: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        identity: builtins.str = ...,
        first_execution_run_id: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "details", b"details", "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "details",
            b"details",
            "first_execution_run_id",
            b"first_execution_run_id",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "reason",
            b"reason",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___TerminateWorkflowExecutionRequest = TerminateWorkflowExecutionRequest

class TerminateWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TerminateWorkflowExecutionResponse = TerminateWorkflowExecutionResponse

class DeleteWorkflowExecutionRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0135::request-unknown-fields=disabled
        aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
    (-- api-linter: core::0135::request-name-required=disabled
        aip.dev/not-precedent: DeleteNamespace RPC doesn't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution:
        """Workflow Execution to delete. If run_id is not specified, the latest one is used."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "workflow_execution", b"workflow_execution"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "workflow_execution", b"workflow_execution"
        ],
    ) -> None: ...

global___DeleteWorkflowExecutionRequest = DeleteWorkflowExecutionRequest

class DeleteWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteWorkflowExecutionResponse = DeleteWorkflowExecutionResponse

class ListOpenWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    START_TIME_FILTER_FIELD_NUMBER: builtins.int
    EXECUTION_FILTER_FIELD_NUMBER: builtins.int
    TYPE_FILTER_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def start_time_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.StartTimeFilter: ...
    @property
    def execution_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter: ...
    @property
    def type_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        start_time_filter: temporalio.api.filter.v1.message_pb2.StartTimeFilter
        | None = ...,
        execution_filter: temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter
        | None = ...,
        type_filter: temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "start_time_filter",
            b"start_time_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "start_time_filter",
            b"start_time_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["filters", b"filters"]
    ) -> typing_extensions.Literal["execution_filter", "type_filter"] | None: ...

global___ListOpenWorkflowExecutionsRequest = ListOpenWorkflowExecutionsRequest

class ListOpenWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListOpenWorkflowExecutionsResponse = ListOpenWorkflowExecutionsResponse

class ListClosedWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    START_TIME_FILTER_FIELD_NUMBER: builtins.int
    EXECUTION_FILTER_FIELD_NUMBER: builtins.int
    TYPE_FILTER_FIELD_NUMBER: builtins.int
    STATUS_FILTER_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    maximum_page_size: builtins.int
    next_page_token: builtins.bytes
    @property
    def start_time_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.StartTimeFilter: ...
    @property
    def execution_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter: ...
    @property
    def type_filter(
        self,
    ) -> temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter: ...
    @property
    def status_filter(self) -> temporalio.api.filter.v1.message_pb2.StatusFilter: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        start_time_filter: temporalio.api.filter.v1.message_pb2.StartTimeFilter
        | None = ...,
        execution_filter: temporalio.api.filter.v1.message_pb2.WorkflowExecutionFilter
        | None = ...,
        type_filter: temporalio.api.filter.v1.message_pb2.WorkflowTypeFilter
        | None = ...,
        status_filter: temporalio.api.filter.v1.message_pb2.StatusFilter | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "start_time_filter",
            b"start_time_filter",
            "status_filter",
            b"status_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_filter",
            b"execution_filter",
            "filters",
            b"filters",
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "start_time_filter",
            b"start_time_filter",
            "status_filter",
            b"status_filter",
            "type_filter",
            b"type_filter",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["filters", b"filters"]
    ) -> (
        typing_extensions.Literal["execution_filter", "type_filter", "status_filter"]
        | None
    ): ...

global___ListClosedWorkflowExecutionsRequest = ListClosedWorkflowExecutionsRequest

class ListClosedWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListClosedWorkflowExecutionsResponse = ListClosedWorkflowExecutionsResponse

class ListWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ListWorkflowExecutionsRequest = ListWorkflowExecutionsRequest

class ListWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListWorkflowExecutionsResponse = ListWorkflowExecutionsResponse

class ListArchivedWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ListArchivedWorkflowExecutionsRequest = ListArchivedWorkflowExecutionsRequest

class ListArchivedWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ListArchivedWorkflowExecutionsResponse = ListArchivedWorkflowExecutionsResponse

class ScanWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    page_size: builtins.int
    next_page_token: builtins.bytes
    query: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
            "query",
            b"query",
        ],
    ) -> None: ...

global___ScanWorkflowExecutionsRequest = ScanWorkflowExecutionsRequest

class ScanWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        executions: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "executions", b"executions", "next_page_token", b"next_page_token"
        ],
    ) -> None: ...

global___ScanWorkflowExecutionsResponse = ScanWorkflowExecutionsResponse

class CountWorkflowExecutionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    query: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "query", b"query"
        ],
    ) -> None: ...

global___CountWorkflowExecutionsRequest = CountWorkflowExecutionsRequest

class CountWorkflowExecutionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COUNT_FIELD_NUMBER: builtins.int
    count: builtins.int
    def __init__(
        self,
        *,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["count", b"count"]
    ) -> None: ...

global___CountWorkflowExecutionsResponse = CountWorkflowExecutionsResponse

class GetSearchAttributesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetSearchAttributesRequest = GetSearchAttributesRequest

class GetSearchAttributesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class KeysEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[
        builtins.str, temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType
    ]: ...
    def __init__(
        self,
        *,
        keys: collections.abc.Mapping[
            builtins.str, temporalio.api.enums.v1.common_pb2.IndexedValueType.ValueType
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["keys", b"keys"]
    ) -> None: ...

global___GetSearchAttributesResponse = GetSearchAttributesResponse

class RespondQueryTaskCompletedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_TOKEN_FIELD_NUMBER: builtins.int
    COMPLETED_TYPE_FIELD_NUMBER: builtins.int
    QUERY_RESULT_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    task_token: builtins.bytes
    completed_type: temporalio.api.enums.v1.query_pb2.QueryResultType.ValueType
    @property
    def query_result(self) -> temporalio.api.common.v1.message_pb2.Payloads: ...
    error_message: builtins.str
    namespace: builtins.str
    def __init__(
        self,
        *,
        task_token: builtins.bytes = ...,
        completed_type: temporalio.api.enums.v1.query_pb2.QueryResultType.ValueType = ...,
        query_result: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        error_message: builtins.str = ...,
        namespace: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["query_result", b"query_result"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "completed_type",
            b"completed_type",
            "error_message",
            b"error_message",
            "namespace",
            b"namespace",
            "query_result",
            b"query_result",
            "task_token",
            b"task_token",
        ],
    ) -> None: ...

global___RespondQueryTaskCompletedRequest = RespondQueryTaskCompletedRequest

class RespondQueryTaskCompletedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RespondQueryTaskCompletedResponse = RespondQueryTaskCompletedResponse

class ResetStickyTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        execution: temporalio.api.common.v1.message_pb2.WorkflowExecution | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "namespace", b"namespace"
        ],
    ) -> None: ...

global___ResetStickyTaskQueueRequest = ResetStickyTaskQueueRequest

class ResetStickyTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ResetStickyTaskQueueResponse = ResetStickyTaskQueueResponse

class QueryWorkflowRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    QUERY_REJECT_CONDITION_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    @property
    def query(self) -> temporalio.api.query.v1.message_pb2.WorkflowQuery: ...
    query_reject_condition: temporalio.api.enums.v1.query_pb2.QueryRejectCondition.ValueType
    """QueryRejectCondition can used to reject the query if workflow state does not satisfy condition.
    Default: QUERY_REJECT_CONDITION_NONE.
    """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        execution: temporalio.api.common.v1.message_pb2.WorkflowExecution | None = ...,
        query: temporalio.api.query.v1.message_pb2.WorkflowQuery | None = ...,
        query_reject_condition: temporalio.api.enums.v1.query_pb2.QueryRejectCondition.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "query", b"query"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution",
            b"execution",
            "namespace",
            b"namespace",
            "query",
            b"query",
            "query_reject_condition",
            b"query_reject_condition",
        ],
    ) -> None: ...

global___QueryWorkflowRequest = QueryWorkflowRequest

class QueryWorkflowResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_RESULT_FIELD_NUMBER: builtins.int
    QUERY_REJECTED_FIELD_NUMBER: builtins.int
    @property
    def query_result(self) -> temporalio.api.common.v1.message_pb2.Payloads: ...
    @property
    def query_rejected(self) -> temporalio.api.query.v1.message_pb2.QueryRejected: ...
    def __init__(
        self,
        *,
        query_result: temporalio.api.common.v1.message_pb2.Payloads | None = ...,
        query_rejected: temporalio.api.query.v1.message_pb2.QueryRejected | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "query_rejected", b"query_rejected", "query_result", b"query_result"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "query_rejected", b"query_rejected", "query_result", b"query_result"
        ],
    ) -> None: ...

global___QueryWorkflowResponse = QueryWorkflowResponse

class DescribeWorkflowExecutionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    EXECUTION_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def execution(self) -> temporalio.api.common.v1.message_pb2.WorkflowExecution: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        execution: temporalio.api.common.v1.message_pb2.WorkflowExecution | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["execution", b"execution"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution", b"execution", "namespace", b"namespace"
        ],
    ) -> None: ...

global___DescribeWorkflowExecutionRequest = DescribeWorkflowExecutionRequest

class DescribeWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTION_CONFIG_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_INFO_FIELD_NUMBER: builtins.int
    PENDING_ACTIVITIES_FIELD_NUMBER: builtins.int
    PENDING_CHILDREN_FIELD_NUMBER: builtins.int
    PENDING_WORKFLOW_TASK_FIELD_NUMBER: builtins.int
    @property
    def execution_config(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.WorkflowExecutionConfig: ...
    @property
    def workflow_execution_info(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo: ...
    @property
    def pending_activities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.PendingActivityInfo
    ]: ...
    @property
    def pending_children(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.workflow.v1.message_pb2.PendingChildExecutionInfo
    ]: ...
    @property
    def pending_workflow_task(
        self,
    ) -> temporalio.api.workflow.v1.message_pb2.PendingWorkflowTaskInfo: ...
    def __init__(
        self,
        *,
        execution_config: temporalio.api.workflow.v1.message_pb2.WorkflowExecutionConfig
        | None = ...,
        workflow_execution_info: temporalio.api.workflow.v1.message_pb2.WorkflowExecutionInfo
        | None = ...,
        pending_activities: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.PendingActivityInfo
        ]
        | None = ...,
        pending_children: collections.abc.Iterable[
            temporalio.api.workflow.v1.message_pb2.PendingChildExecutionInfo
        ]
        | None = ...,
        pending_workflow_task: temporalio.api.workflow.v1.message_pb2.PendingWorkflowTaskInfo
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "execution_config",
            b"execution_config",
            "pending_workflow_task",
            b"pending_workflow_task",
            "workflow_execution_info",
            b"workflow_execution_info",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "execution_config",
            b"execution_config",
            "pending_activities",
            b"pending_activities",
            "pending_children",
            b"pending_children",
            "pending_workflow_task",
            b"pending_workflow_task",
            "workflow_execution_info",
            b"workflow_execution_info",
        ],
    ) -> None: ...

global___DescribeWorkflowExecutionResponse = DescribeWorkflowExecutionResponse

class DescribeTaskQueueRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_TYPE_FIELD_NUMBER: builtins.int
    INCLUDE_TASK_QUEUE_STATUS_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    task_queue_type: temporalio.api.enums.v1.task_queue_pb2.TaskQueueType.ValueType
    include_task_queue_status: builtins.bool
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
        task_queue_type: temporalio.api.enums.v1.task_queue_pb2.TaskQueueType.ValueType = ...,
        include_task_queue_status: builtins.bool = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["task_queue", b"task_queue"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "include_task_queue_status",
            b"include_task_queue_status",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
            "task_queue_type",
            b"task_queue_type",
        ],
    ) -> None: ...

global___DescribeTaskQueueRequest = DescribeTaskQueueRequest

class DescribeTaskQueueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLLERS_FIELD_NUMBER: builtins.int
    TASK_QUEUE_STATUS_FIELD_NUMBER: builtins.int
    @property
    def pollers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.PollerInfo
    ]: ...
    @property
    def task_queue_status(
        self,
    ) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueueStatus: ...
    def __init__(
        self,
        *,
        pollers: collections.abc.Iterable[
            temporalio.api.taskqueue.v1.message_pb2.PollerInfo
        ]
        | None = ...,
        task_queue_status: temporalio.api.taskqueue.v1.message_pb2.TaskQueueStatus
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "task_queue_status", b"task_queue_status"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "pollers", b"pollers", "task_queue_status", b"task_queue_status"
        ],
    ) -> None: ...

global___DescribeTaskQueueResponse = DescribeTaskQueueResponse

class GetClusterInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetClusterInfoRequest = GetClusterInfoRequest

class GetClusterInfoResponse(google.protobuf.message.Message):
    """GetClusterInfoResponse contains information about Temporal cluster."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class SupportedClientsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    SUPPORTED_CLIENTS_FIELD_NUMBER: builtins.int
    SERVER_VERSION_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    VERSION_INFO_FIELD_NUMBER: builtins.int
    CLUSTER_NAME_FIELD_NUMBER: builtins.int
    HISTORY_SHARD_COUNT_FIELD_NUMBER: builtins.int
    PERSISTENCE_STORE_FIELD_NUMBER: builtins.int
    VISIBILITY_STORE_FIELD_NUMBER: builtins.int
    @property
    def supported_clients(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Key is client name i.e "temporal-go", "temporal-java", or "temporal-cli".
        Value is ranges of supported versions of this client i.e ">1.1.1 <=1.4.0 || ^5.0.0".
        """
    server_version: builtins.str
    cluster_id: builtins.str
    @property
    def version_info(self) -> temporalio.api.version.v1.message_pb2.VersionInfo: ...
    cluster_name: builtins.str
    history_shard_count: builtins.int
    persistence_store: builtins.str
    visibility_store: builtins.str
    def __init__(
        self,
        *,
        supported_clients: collections.abc.Mapping[builtins.str, builtins.str]
        | None = ...,
        server_version: builtins.str = ...,
        cluster_id: builtins.str = ...,
        version_info: temporalio.api.version.v1.message_pb2.VersionInfo | None = ...,
        cluster_name: builtins.str = ...,
        history_shard_count: builtins.int = ...,
        persistence_store: builtins.str = ...,
        visibility_store: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["version_info", b"version_info"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "cluster_id",
            b"cluster_id",
            "cluster_name",
            b"cluster_name",
            "history_shard_count",
            b"history_shard_count",
            "persistence_store",
            b"persistence_store",
            "server_version",
            b"server_version",
            "supported_clients",
            b"supported_clients",
            "version_info",
            b"version_info",
            "visibility_store",
            b"visibility_store",
        ],
    ) -> None: ...

global___GetClusterInfoResponse = GetClusterInfoResponse

class GetSystemInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetSystemInfoRequest = GetSystemInfoRequest

class GetSystemInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Capabilities(google.protobuf.message.Message):
        """System capability details."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SIGNAL_AND_QUERY_HEADER_FIELD_NUMBER: builtins.int
        INTERNAL_ERROR_DIFFERENTIATION_FIELD_NUMBER: builtins.int
        ACTIVITY_FAILURE_INCLUDE_HEARTBEAT_FIELD_NUMBER: builtins.int
        SUPPORTS_SCHEDULES_FIELD_NUMBER: builtins.int
        ENCODED_FAILURE_ATTRIBUTES_FIELD_NUMBER: builtins.int
        BUILD_ID_BASED_VERSIONING_FIELD_NUMBER: builtins.int
        UPSERT_MEMO_FIELD_NUMBER: builtins.int
        EAGER_WORKFLOW_START_FIELD_NUMBER: builtins.int
        SDK_METADATA_FIELD_NUMBER: builtins.int
        signal_and_query_header: builtins.bool
        """True if signal and query headers are supported."""
        internal_error_differentiation: builtins.bool
        """True if internal errors are differentiated from other types of errors for purposes of
        retrying non-internal errors.

        When unset/false, clients retry all failures. When true, clients should only retry
        non-internal errors.
        """
        activity_failure_include_heartbeat: builtins.bool
        """True if RespondActivityTaskFailed API supports including heartbeat details"""
        supports_schedules: builtins.bool
        """Supports scheduled workflow features."""
        encoded_failure_attributes: builtins.bool
        """True if server uses protos that include temporalio.api.failure.v1.Failure.encoded_attributes"""
        build_id_based_versioning: builtins.bool
        """True if server supports dispatching Workflow and Activity tasks based on a worker's build_id
        (see:
        https://github.com/temporalio/proposals/blob/a123af3b559f43db16ea6dd31870bfb754c4dc5e/versioning/worker-versions.md)
        """
        upsert_memo: builtins.bool
        """True if server supports upserting workflow memo"""
        eager_workflow_start: builtins.bool
        """True if server supports eager workflow task dispatching for the StartWorkflowExecution API"""
        sdk_metadata: builtins.bool
        """True if the server knows about the sdk metadata field on WFT completions and will record
        it in history
        """
        def __init__(
            self,
            *,
            signal_and_query_header: builtins.bool = ...,
            internal_error_differentiation: builtins.bool = ...,
            activity_failure_include_heartbeat: builtins.bool = ...,
            supports_schedules: builtins.bool = ...,
            encoded_failure_attributes: builtins.bool = ...,
            build_id_based_versioning: builtins.bool = ...,
            upsert_memo: builtins.bool = ...,
            eager_workflow_start: builtins.bool = ...,
            sdk_metadata: builtins.bool = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "activity_failure_include_heartbeat",
                b"activity_failure_include_heartbeat",
                "build_id_based_versioning",
                b"build_id_based_versioning",
                "eager_workflow_start",
                b"eager_workflow_start",
                "encoded_failure_attributes",
                b"encoded_failure_attributes",
                "internal_error_differentiation",
                b"internal_error_differentiation",
                "sdk_metadata",
                b"sdk_metadata",
                "signal_and_query_header",
                b"signal_and_query_header",
                "supports_schedules",
                b"supports_schedules",
                "upsert_memo",
                b"upsert_memo",
            ],
        ) -> None: ...

    SERVER_VERSION_FIELD_NUMBER: builtins.int
    CAPABILITIES_FIELD_NUMBER: builtins.int
    server_version: builtins.str
    """Version of the server."""
    @property
    def capabilities(self) -> global___GetSystemInfoResponse.Capabilities:
        """All capabilities the system supports."""
    def __init__(
        self,
        *,
        server_version: builtins.str = ...,
        capabilities: global___GetSystemInfoResponse.Capabilities | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["capabilities", b"capabilities"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "capabilities", b"capabilities", "server_version", b"server_version"
        ],
    ) -> None: ...

global___GetSystemInfoResponse = GetSystemInfoResponse

class ListTaskQueuePartitionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def task_queue(self) -> temporalio.api.taskqueue.v1.message_pb2.TaskQueue: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: temporalio.api.taskqueue.v1.message_pb2.TaskQueue | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["task_queue", b"task_queue"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "task_queue", b"task_queue"
        ],
    ) -> None: ...

global___ListTaskQueuePartitionsRequest = ListTaskQueuePartitionsRequest

class ListTaskQueuePartitionsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVITY_TASK_QUEUE_PARTITIONS_FIELD_NUMBER: builtins.int
    WORKFLOW_TASK_QUEUE_PARTITIONS_FIELD_NUMBER: builtins.int
    @property
    def activity_task_queue_partitions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
    ]: ...
    @property
    def workflow_task_queue_partitions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
    ]: ...
    def __init__(
        self,
        *,
        activity_task_queue_partitions: collections.abc.Iterable[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
        ]
        | None = ...,
        workflow_task_queue_partitions: collections.abc.Iterable[
            temporalio.api.taskqueue.v1.message_pb2.TaskQueuePartitionMetadata
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "activity_task_queue_partitions",
            b"activity_task_queue_partitions",
            "workflow_task_queue_partitions",
            b"workflow_task_queue_partitions",
        ],
    ) -> None: ...

global___ListTaskQueuePartitionsResponse = ListTaskQueuePartitionsResponse

class CreateScheduleRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0133::request-parent-required=disabled
        aip.dev/not-precedent: CreateSchedule doesn't follow Google API format --)
    (-- api-linter: core::0133::request-unknown-fields=disabled
        aip.dev/not-precedent: CreateSchedule doesn't follow Google API format --)
    (-- api-linter: core::0133::request-resource-behavior=disabled
        aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)
    (-- api-linter: core::0203::optional=disabled
        aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    INITIAL_PATCH_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace the schedule should be created in."""
    schedule_id: builtins.str
    """The id of the new schedule."""
    @property
    def schedule(self) -> temporalio.api.schedule.v1.message_pb2.Schedule:
        """The schedule spec, policies, action, and initial state."""
    @property
    def initial_patch(self) -> temporalio.api.schedule.v1.message_pb2.SchedulePatch:
        """Optional initial patch (e.g. to run the action once immediately)."""
    identity: builtins.str
    """The identity of the client who initiated this request."""
    request_id: builtins.str
    """A unique identifier for this create request for idempotence. Typically UUIDv4."""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo:
        """Memo and search attributes to attach to the schedule itself."""
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
        schedule: temporalio.api.schedule.v1.message_pb2.Schedule | None = ...,
        initial_patch: temporalio.api.schedule.v1.message_pb2.SchedulePatch
        | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
        memo: temporalio.api.common.v1.message_pb2.Memo | None = ...,
        search_attributes: temporalio.api.common.v1.message_pb2.SearchAttributes
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "initial_patch",
            b"initial_patch",
            "memo",
            b"memo",
            "schedule",
            b"schedule",
            "search_attributes",
            b"search_attributes",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "initial_patch",
            b"initial_patch",
            "memo",
            b"memo",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "schedule",
            b"schedule",
            "schedule_id",
            b"schedule_id",
            "search_attributes",
            b"search_attributes",
        ],
    ) -> None: ...

global___CreateScheduleRequest = CreateScheduleRequest

class CreateScheduleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFLICT_TOKEN_FIELD_NUMBER: builtins.int
    conflict_token: builtins.bytes
    def __init__(
        self,
        *,
        conflict_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["conflict_token", b"conflict_token"]
    ) -> None: ...

global___CreateScheduleResponse = CreateScheduleResponse

class DescribeScheduleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the schedule to describe."""
    schedule_id: builtins.str
    """The id of the schedule to describe."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace", b"namespace", "schedule_id", b"schedule_id"
        ],
    ) -> None: ...

global___DescribeScheduleRequest = DescribeScheduleRequest

class DescribeScheduleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEDULE_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    SEARCH_ATTRIBUTES_FIELD_NUMBER: builtins.int
    CONFLICT_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def schedule(self) -> temporalio.api.schedule.v1.message_pb2.Schedule:
        """The complete current schedule details. This may not match the schedule as
        created because:
        - some types of schedule specs may get compiled into others (e.g.
          CronString into StructuredCalendarSpec)
        - some unspecified fields may be replaced by defaults
        - some fields in the state are modified automatically
        - the schedule may have been modified by UpdateSchedule or PatchSchedule
        """
    @property
    def info(self) -> temporalio.api.schedule.v1.message_pb2.ScheduleInfo:
        """Extra schedule state info."""
    @property
    def memo(self) -> temporalio.api.common.v1.message_pb2.Memo:
        """The memo and search attributes that the schedule was created with."""
    @property
    def search_attributes(
        self,
    ) -> temporalio.api.common.v1.message_pb2.SearchAttributes: ...
    conflict_token: builtins.bytes
    """This value can be passed back to UpdateSchedule to ensure that the
    schedule was not modified between a Describe and an Update, which could
    lead to lost updates and other confusion.
    """
    def __init__(
        self,
        *,
        schedule: temporalio.api.schedule.v1.message_pb2.Schedule | None = ...,
        info: temporalio.api.schedule.v1.message_pb2.ScheduleInfo | None = ...,
        memo: temporalio.api.common.v1.message_pb2.Memo | None = ...,
        search_attributes: temporalio.api.common.v1.message_pb2.SearchAttributes
        | None = ...,
        conflict_token: builtins.bytes = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "info",
            b"info",
            "memo",
            b"memo",
            "schedule",
            b"schedule",
            "search_attributes",
            b"search_attributes",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "conflict_token",
            b"conflict_token",
            "info",
            b"info",
            "memo",
            b"memo",
            "schedule",
            b"schedule",
            "search_attributes",
            b"search_attributes",
        ],
    ) -> None: ...

global___DescribeScheduleResponse = DescribeScheduleResponse

class UpdateScheduleRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134::request-mask-required=disabled
    aip.dev/not-precedent: UpdateSchedule doesn't follow Google API format --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    CONFLICT_TOKEN_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the schedule to update."""
    schedule_id: builtins.str
    """The id of the schedule to update."""
    @property
    def schedule(self) -> temporalio.api.schedule.v1.message_pb2.Schedule:
        """The new schedule. The four main fields of the schedule (spec, action,
        policies, state) are replaced completely by the values in this message.
        """
    conflict_token: builtins.bytes
    """This can be the value of conflict_token from a DescribeScheduleResponse,
    which will cause this request to fail if the schedule has been modified
    between the Describe and this Update.
    If missing, the schedule will be updated unconditionally.
    """
    identity: builtins.str
    """The identity of the client who initiated this request."""
    request_id: builtins.str
    """A unique identifier for this update request for idempotence. Typically UUIDv4."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
        schedule: temporalio.api.schedule.v1.message_pb2.Schedule | None = ...,
        conflict_token: builtins.bytes = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["schedule", b"schedule"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "conflict_token",
            b"conflict_token",
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "request_id",
            b"request_id",
            "schedule",
            b"schedule",
            "schedule_id",
            b"schedule_id",
        ],
    ) -> None: ...

global___UpdateScheduleRequest = UpdateScheduleRequest

class UpdateScheduleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UpdateScheduleResponse = UpdateScheduleResponse

class PatchScheduleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    PATCH_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the schedule to patch."""
    schedule_id: builtins.str
    """The id of the schedule to patch."""
    @property
    def patch(self) -> temporalio.api.schedule.v1.message_pb2.SchedulePatch: ...
    identity: builtins.str
    """The identity of the client who initiated this request."""
    request_id: builtins.str
    """A unique identifier for this update request for idempotence. Typically UUIDv4."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
        patch: temporalio.api.schedule.v1.message_pb2.SchedulePatch | None = ...,
        identity: builtins.str = ...,
        request_id: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["patch", b"patch"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "patch",
            b"patch",
            "request_id",
            b"request_id",
            "schedule_id",
            b"schedule_id",
        ],
    ) -> None: ...

global___PatchScheduleRequest = PatchScheduleRequest

class PatchScheduleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___PatchScheduleResponse = PatchScheduleResponse

class ListScheduleMatchingTimesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the schedule to query."""
    schedule_id: builtins.str
    """The id of the schedule to query."""
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time range to query."""
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "end_time", b"end_time", "start_time", b"start_time"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "end_time",
            b"end_time",
            "namespace",
            b"namespace",
            "schedule_id",
            b"schedule_id",
            "start_time",
            b"start_time",
        ],
    ) -> None: ...

global___ListScheduleMatchingTimesRequest = ListScheduleMatchingTimesRequest

class ListScheduleMatchingTimesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        google.protobuf.timestamp_pb2.Timestamp
    ]: ...
    def __init__(
        self,
        *,
        start_time: collections.abc.Iterable[google.protobuf.timestamp_pb2.Timestamp]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["start_time", b"start_time"]
    ) -> None: ...

global___ListScheduleMatchingTimesResponse = ListScheduleMatchingTimesResponse

class DeleteScheduleRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0135::request-name-required=disabled
        aip.dev/not-precedent: DeleteSchedule doesn't follow Google API format --)
    (-- api-linter: core::0135::request-unknown-fields=disabled
        aip.dev/not-precedent: DeleteSchedule doesn't follow Google API format --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    SCHEDULE_ID_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the schedule to delete."""
    schedule_id: builtins.str
    """The id of the schedule to delete."""
    identity: builtins.str
    """The identity of the client who initiated this request."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        schedule_id: builtins.str = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "schedule_id",
            b"schedule_id",
        ],
    ) -> None: ...

global___DeleteScheduleRequest = DeleteScheduleRequest

class DeleteScheduleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteScheduleResponse = DeleteScheduleResponse

class ListSchedulesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    MAXIMUM_PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace to list schedules in."""
    maximum_page_size: builtins.int
    """How many to return at once."""
    next_page_token: builtins.bytes
    """Token to get the next page of results."""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        maximum_page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "maximum_page_size",
            b"maximum_page_size",
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
        ],
    ) -> None: ...

global___ListSchedulesRequest = ListSchedulesRequest

class ListSchedulesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEDULES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def schedules(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.schedule.v1.message_pb2.ScheduleListEntry
    ]: ...
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        schedules: collections.abc.Iterable[
            temporalio.api.schedule.v1.message_pb2.ScheduleListEntry
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "next_page_token", b"next_page_token", "schedules", b"schedules"
        ],
    ) -> None: ...

global___ListSchedulesResponse = ListSchedulesResponse

class UpdateWorkerBuildIdCompatibilityRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134::request-mask-required=disabled
        aip.dev/not-precedent: UpdateWorkerBuildIdCompatibilityRequest doesn't follow Google API format --)
    (-- api-linter: core::0134::request-resource-required=disabled
        aip.dev/not-precedent: UpdateWorkerBuildIdCompatibilityRequest RPC doesn't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class AddNewCompatibleVersion(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NEW_BUILD_ID_FIELD_NUMBER: builtins.int
        EXISTING_COMPATIBLE_BUILD_ID_FIELD_NUMBER: builtins.int
        MAKE_SET_DEFAULT_FIELD_NUMBER: builtins.int
        new_build_id: builtins.str
        """A new id to be added to an existing compatible set."""
        existing_compatible_build_id: builtins.str
        """A build id which must already exist in the version sets known by the task queue. The new
        id will be stored in the set containing this id, marking it as compatible with
        the versions within.
        """
        make_set_default: builtins.bool
        """When set, establishes the compatible set being targeted as the overall default for the
        queue. If a different set was the current default, the targeted set will replace it as
        the new default.
        """
        def __init__(
            self,
            *,
            new_build_id: builtins.str = ...,
            existing_compatible_build_id: builtins.str = ...,
            make_set_default: builtins.bool = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "existing_compatible_build_id",
                b"existing_compatible_build_id",
                "make_set_default",
                b"make_set_default",
                "new_build_id",
                b"new_build_id",
            ],
        ) -> None: ...

    class MergeSets(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PRIMARY_SET_BUILD_ID_FIELD_NUMBER: builtins.int
        SECONDARY_SET_BUILD_ID_FIELD_NUMBER: builtins.int
        primary_set_build_id: builtins.str
        """A build ID in the set whose default will become the merged set default"""
        secondary_set_build_id: builtins.str
        """A build ID in the set which will be merged into the primary set"""
        def __init__(
            self,
            *,
            primary_set_build_id: builtins.str = ...,
            secondary_set_build_id: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "primary_set_build_id",
                b"primary_set_build_id",
                "secondary_set_build_id",
                b"secondary_set_build_id",
            ],
        ) -> None: ...

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    ADD_NEW_BUILD_ID_IN_NEW_DEFAULT_SET_FIELD_NUMBER: builtins.int
    ADD_NEW_COMPATIBLE_BUILD_ID_FIELD_NUMBER: builtins.int
    PROMOTE_SET_BY_BUILD_ID_FIELD_NUMBER: builtins.int
    PROMOTE_BUILD_ID_WITHIN_SET_FIELD_NUMBER: builtins.int
    MERGE_SETS_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    task_queue: builtins.str
    """Must be set, the task queue to apply changes to. Because all workers on a given task queue
    must have the same set of workflow & activity implementations, there is no reason to specify
    a task queue type here.
    """
    add_new_build_id_in_new_default_set: builtins.str
    """A new build id. This operation will create a new set which will be the new overall
    default version for the queue, with this id as its only member. This new set is
    incompatible with all previous sets/versions.

    (-- api-linter: core::0140::prepositions=disabled
        aip.dev/not-precedent: In makes perfect sense here. --)
    """
    @property
    def add_new_compatible_build_id(
        self,
    ) -> global___UpdateWorkerBuildIdCompatibilityRequest.AddNewCompatibleVersion:
        """Adds a new id to an existing compatible set, see sub-message definition for more."""
    promote_set_by_build_id: builtins.str
    """Promote an existing set to be the current default (if it isn't already) by targeting
    an existing build id within it. This field's value is the extant build id.

    (-- api-linter: core::0140::prepositions=disabled
        aip.dev/not-precedent: Names are hard. --)
    """
    promote_build_id_within_set: builtins.str
    """Promote an existing build id within some set to be the current default for that set.

    (-- api-linter: core::0140::prepositions=disabled
        aip.dev/not-precedent: Within makes perfect sense here. --)
    """
    @property
    def merge_sets(self) -> global___UpdateWorkerBuildIdCompatibilityRequest.MergeSets:
        """Merge two existing sets together, thus declaring all build IDs in both sets compatible
        with one another. The primary set's default will become the default for the merged set.
        This is useful if you've accidentally declared a new ID as incompatible you meant to
        declare as compatible. The unusual case of incomplete replication during failover could
        also result in a split set, which this operation can repair.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: builtins.str = ...,
        add_new_build_id_in_new_default_set: builtins.str = ...,
        add_new_compatible_build_id: global___UpdateWorkerBuildIdCompatibilityRequest.AddNewCompatibleVersion
        | None = ...,
        promote_set_by_build_id: builtins.str = ...,
        promote_build_id_within_set: builtins.str = ...,
        merge_sets: global___UpdateWorkerBuildIdCompatibilityRequest.MergeSets
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "add_new_build_id_in_new_default_set",
            b"add_new_build_id_in_new_default_set",
            "add_new_compatible_build_id",
            b"add_new_compatible_build_id",
            "merge_sets",
            b"merge_sets",
            "operation",
            b"operation",
            "promote_build_id_within_set",
            b"promote_build_id_within_set",
            "promote_set_by_build_id",
            b"promote_set_by_build_id",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "add_new_build_id_in_new_default_set",
            b"add_new_build_id_in_new_default_set",
            "add_new_compatible_build_id",
            b"add_new_compatible_build_id",
            "merge_sets",
            b"merge_sets",
            "namespace",
            b"namespace",
            "operation",
            b"operation",
            "promote_build_id_within_set",
            b"promote_build_id_within_set",
            "promote_set_by_build_id",
            b"promote_set_by_build_id",
            "task_queue",
            b"task_queue",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["operation", b"operation"]
    ) -> (
        typing_extensions.Literal[
            "add_new_build_id_in_new_default_set",
            "add_new_compatible_build_id",
            "promote_set_by_build_id",
            "promote_build_id_within_set",
            "merge_sets",
        ]
        | None
    ): ...

global___UpdateWorkerBuildIdCompatibilityRequest = (
    UpdateWorkerBuildIdCompatibilityRequest
)

class UpdateWorkerBuildIdCompatibilityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_SET_ID_FIELD_NUMBER: builtins.int
    version_set_id: builtins.str
    """The id of the compatible set that the updated version was added to, or exists in. Users don't
    need to understand or care about this value, but it has value for debugging purposes.
    """
    def __init__(
        self,
        *,
        version_set_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["version_set_id", b"version_set_id"]
    ) -> None: ...

global___UpdateWorkerBuildIdCompatibilityResponse = (
    UpdateWorkerBuildIdCompatibilityResponse
)

class GetWorkerBuildIdCompatibilityRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134::request-resource-required=disabled
    aip.dev/not-precedent: GetWorkerBuildIdCompatibilityRequest RPC doesn't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    TASK_QUEUE_FIELD_NUMBER: builtins.int
    MAX_SETS_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    task_queue: builtins.str
    """Must be set, the task queue to interrogate about worker id compatibility."""
    max_sets: builtins.int
    """Limits how many compatible sets will be returned. Specify 1 to only return the current
    default major version set. 0 returns all sets.
    """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        task_queue: builtins.str = ...,
        max_sets: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "max_sets",
            b"max_sets",
            "namespace",
            b"namespace",
            "task_queue",
            b"task_queue",
        ],
    ) -> None: ...

global___GetWorkerBuildIdCompatibilityRequest = GetWorkerBuildIdCompatibilityRequest

class GetWorkerBuildIdCompatibilityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAJOR_VERSION_SETS_FIELD_NUMBER: builtins.int
    @property
    def major_version_sets(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.CompatibleVersionSet
    ]:
        """Major version sets, in order from oldest to newest. The last element of the list will always
        be the current default major version. IE: New workflows will target the most recent version
        in that version set.

        There may be fewer sets returned than exist, if the request chose to limit this response.
        """
    def __init__(
        self,
        *,
        major_version_sets: collections.abc.Iterable[
            temporalio.api.taskqueue.v1.message_pb2.CompatibleVersionSet
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "major_version_sets", b"major_version_sets"
        ],
    ) -> None: ...

global___GetWorkerBuildIdCompatibilityResponse = GetWorkerBuildIdCompatibilityResponse

class GetWorkerTaskReachabilityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    BUILD_IDS_FIELD_NUMBER: builtins.int
    TASK_QUEUES_FIELD_NUMBER: builtins.int
    REACHABILITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    @property
    def build_ids(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Build ids to retrieve reachability for. An empty string will be interpreted as an unversioned worker.
        The number of build ids that can be queried in a single API call is limited.
        Open source users can adjust this limit by setting the server's dynamic config value for
        `limit.reachabilityQueryBuildIds` with the caveat that this call can strain the visibility store.
        """
    @property
    def task_queues(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Task queues to retrieve reachability for. Leave this empty to query for all task queues associated with given
        build ids in the namespace.
        Must specify at least one task queue if querying for an unversioned worker.
        The number of task queues that the server will fetch reachability information for is limited.
        See the `GetWorkerTaskReachabilityResponse` documentation for more information.
        """
    reachability: temporalio.api.enums.v1.task_queue_pb2.TaskReachability.ValueType
    """Type of reachability to query for.
    `TASK_REACHABILITY_NEW_WORKFLOWS` is always returned in the response.
    Use `TASK_REACHABILITY_EXISTING_WORKFLOWS` if your application needs to respond to queries on closed workflows.
    Otherwise, use `TASK_REACHABILITY_OPEN_WORKFLOWS`. Default is `TASK_REACHABILITY_EXISTING_WORKFLOWS` if left
    unspecified.
    See the TaskReachability docstring for information about each enum variant.
    """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        build_ids: collections.abc.Iterable[builtins.str] | None = ...,
        task_queues: collections.abc.Iterable[builtins.str] | None = ...,
        reachability: temporalio.api.enums.v1.task_queue_pb2.TaskReachability.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "build_ids",
            b"build_ids",
            "namespace",
            b"namespace",
            "reachability",
            b"reachability",
            "task_queues",
            b"task_queues",
        ],
    ) -> None: ...

global___GetWorkerTaskReachabilityRequest = GetWorkerTaskReachabilityRequest

class GetWorkerTaskReachabilityResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BUILD_ID_REACHABILITY_FIELD_NUMBER: builtins.int
    @property
    def build_id_reachability(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.taskqueue.v1.message_pb2.BuildIdReachability
    ]:
        """Task reachability, broken down by build id and then task queue.
        When requesting a large number of task queues or all task queues associated with the given build ids in a
        namespace, all task queues will be listed in the response but some of them may not contain reachability
        information due to a server enforced limit. When reaching the limit, task queues that reachability information
        could not be retrieved for will be marked with a single TASK_REACHABILITY_UNSPECIFIED entry. The caller may issue
        another call to get the reachability for those task queues.

        Open source users can adjust this limit by setting the server's dynamic config value for
        `limit.reachabilityTaskQueueScan` with the caveat that this call can strain the visibility store.
        """
    def __init__(
        self,
        *,
        build_id_reachability: collections.abc.Iterable[
            temporalio.api.taskqueue.v1.message_pb2.BuildIdReachability
        ]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "build_id_reachability", b"build_id_reachability"
        ],
    ) -> None: ...

global___GetWorkerTaskReachabilityResponse = GetWorkerTaskReachabilityResponse

class UpdateWorkflowExecutionRequest(google.protobuf.message.Message):
    """(-- api-linter: core::0134=disabled
    aip.dev/not-precedent: Update RPCs don't follow Google API format. --)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    WORKFLOW_EXECUTION_FIELD_NUMBER: builtins.int
    FIRST_EXECUTION_RUN_ID_FIELD_NUMBER: builtins.int
    WAIT_POLICY_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace name of the target workflow"""
    @property
    def workflow_execution(
        self,
    ) -> temporalio.api.common.v1.message_pb2.WorkflowExecution:
        """The target workflow id and (optionally) a specific run thereof
        (-- api-linter: core::0203::optional=disabled
            aip.dev/not-precedent: false positive triggered by the word "optional" --)
        """
    first_execution_run_id: builtins.str
    """If set, this call will error if the most recent (if no run id is set on
    `workflow_execution`), or specified (if it is) workflow execution is not
    part of the same execution chain as this id.
    """
    @property
    def wait_policy(self) -> temporalio.api.update.v1.message_pb2.WaitPolicy:
        """Describes when this request should return - basically whether the
        update is synchronous, asynchronous, or somewhere in between.
        """
    @property
    def request(self) -> temporalio.api.update.v1.message_pb2.Request:
        """The request information that will be delivered all the way down to the
        workflow execution.
        """
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        workflow_execution: temporalio.api.common.v1.message_pb2.WorkflowExecution
        | None = ...,
        first_execution_run_id: builtins.str = ...,
        wait_policy: temporalio.api.update.v1.message_pb2.WaitPolicy | None = ...,
        request: temporalio.api.update.v1.message_pb2.Request | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "request",
            b"request",
            "wait_policy",
            b"wait_policy",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "first_execution_run_id",
            b"first_execution_run_id",
            "namespace",
            b"namespace",
            "request",
            b"request",
            "wait_policy",
            b"wait_policy",
            "workflow_execution",
            b"workflow_execution",
        ],
    ) -> None: ...

global___UpdateWorkflowExecutionRequest = UpdateWorkflowExecutionRequest

class UpdateWorkflowExecutionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UPDATE_REF_FIELD_NUMBER: builtins.int
    OUTCOME_FIELD_NUMBER: builtins.int
    @property
    def update_ref(self) -> temporalio.api.update.v1.message_pb2.UpdateRef:
        """Enough information for subsequent poll calls if needed. Never null."""
    @property
    def outcome(self) -> temporalio.api.update.v1.message_pb2.Outcome:
        """The outcome of the update if and only if the workflow execution update
        has completed. If this response is being returned before the update has
        completed then this field will not be set.
        """
    def __init__(
        self,
        *,
        update_ref: temporalio.api.update.v1.message_pb2.UpdateRef | None = ...,
        outcome: temporalio.api.update.v1.message_pb2.Outcome | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "outcome", b"outcome", "update_ref", b"update_ref"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "outcome", b"outcome", "update_ref", b"update_ref"
        ],
    ) -> None: ...

global___UpdateWorkflowExecutionResponse = UpdateWorkflowExecutionResponse

class StartBatchOperationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    VISIBILITY_QUERY_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    EXECUTIONS_FIELD_NUMBER: builtins.int
    TERMINATION_OPERATION_FIELD_NUMBER: builtins.int
    SIGNAL_OPERATION_FIELD_NUMBER: builtins.int
    CANCELLATION_OPERATION_FIELD_NUMBER: builtins.int
    DELETION_OPERATION_FIELD_NUMBER: builtins.int
    RESET_OPERATION_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace that contains the batch operation"""
    visibility_query: builtins.str
    """Visibility query defines the the group of workflow to apply the batch operation
    This field and Executions are mutually exclusive
    """
    job_id: builtins.str
    """Job ID defines the unique ID for the batch job"""
    reason: builtins.str
    """Reason to perform the batch operation"""
    @property
    def executions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.common.v1.message_pb2.WorkflowExecution
    ]:
        """Executions to apply the batch operation
        This field and VisibilityQuery are mutually exclusive
        """
    @property
    def termination_operation(
        self,
    ) -> temporalio.api.batch.v1.message_pb2.BatchOperationTermination: ...
    @property
    def signal_operation(
        self,
    ) -> temporalio.api.batch.v1.message_pb2.BatchOperationSignal: ...
    @property
    def cancellation_operation(
        self,
    ) -> temporalio.api.batch.v1.message_pb2.BatchOperationCancellation: ...
    @property
    def deletion_operation(
        self,
    ) -> temporalio.api.batch.v1.message_pb2.BatchOperationDeletion: ...
    @property
    def reset_operation(
        self,
    ) -> temporalio.api.batch.v1.message_pb2.BatchOperationReset: ...
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        visibility_query: builtins.str = ...,
        job_id: builtins.str = ...,
        reason: builtins.str = ...,
        executions: collections.abc.Iterable[
            temporalio.api.common.v1.message_pb2.WorkflowExecution
        ]
        | None = ...,
        termination_operation: temporalio.api.batch.v1.message_pb2.BatchOperationTermination
        | None = ...,
        signal_operation: temporalio.api.batch.v1.message_pb2.BatchOperationSignal
        | None = ...,
        cancellation_operation: temporalio.api.batch.v1.message_pb2.BatchOperationCancellation
        | None = ...,
        deletion_operation: temporalio.api.batch.v1.message_pb2.BatchOperationDeletion
        | None = ...,
        reset_operation: temporalio.api.batch.v1.message_pb2.BatchOperationReset
        | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "cancellation_operation",
            b"cancellation_operation",
            "deletion_operation",
            b"deletion_operation",
            "operation",
            b"operation",
            "reset_operation",
            b"reset_operation",
            "signal_operation",
            b"signal_operation",
            "termination_operation",
            b"termination_operation",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "cancellation_operation",
            b"cancellation_operation",
            "deletion_operation",
            b"deletion_operation",
            "executions",
            b"executions",
            "job_id",
            b"job_id",
            "namespace",
            b"namespace",
            "operation",
            b"operation",
            "reason",
            b"reason",
            "reset_operation",
            b"reset_operation",
            "signal_operation",
            b"signal_operation",
            "termination_operation",
            b"termination_operation",
            "visibility_query",
            b"visibility_query",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["operation", b"operation"]
    ) -> (
        typing_extensions.Literal[
            "termination_operation",
            "signal_operation",
            "cancellation_operation",
            "deletion_operation",
            "reset_operation",
        ]
        | None
    ): ...

global___StartBatchOperationRequest = StartBatchOperationRequest

class StartBatchOperationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StartBatchOperationResponse = StartBatchOperationResponse

class StopBatchOperationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace that contains the batch operation"""
    job_id: builtins.str
    """Batch job id"""
    reason: builtins.str
    """Reason to stop a batch operation"""
    identity: builtins.str
    """Identity of the operator"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        job_id: builtins.str = ...,
        reason: builtins.str = ...,
        identity: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "job_id",
            b"job_id",
            "namespace",
            b"namespace",
            "reason",
            b"reason",
        ],
    ) -> None: ...

global___StopBatchOperationRequest = StopBatchOperationRequest

class StopBatchOperationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___StopBatchOperationResponse = StopBatchOperationResponse

class DescribeBatchOperationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace that contains the batch operation"""
    job_id: builtins.str
    """Batch job id"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        job_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "job_id", b"job_id", "namespace", b"namespace"
        ],
    ) -> None: ...

global___DescribeBatchOperationRequest = DescribeBatchOperationRequest

class DescribeBatchOperationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_TYPE_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    CLOSE_TIME_FIELD_NUMBER: builtins.int
    TOTAL_OPERATION_COUNT_FIELD_NUMBER: builtins.int
    COMPLETE_OPERATION_COUNT_FIELD_NUMBER: builtins.int
    FAILURE_OPERATION_COUNT_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    operation_type: temporalio.api.enums.v1.batch_operation_pb2.BatchOperationType.ValueType
    """Batch operation type"""
    job_id: builtins.str
    """Batch job ID"""
    state: temporalio.api.enums.v1.batch_operation_pb2.BatchOperationState.ValueType
    """Batch operation state"""
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Batch operation start time"""
    @property
    def close_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Batch operation close time"""
    total_operation_count: builtins.int
    """Total operation count"""
    complete_operation_count: builtins.int
    """Complete operation count"""
    failure_operation_count: builtins.int
    """Failure operation count"""
    identity: builtins.str
    """Identity indicates the operator identity"""
    reason: builtins.str
    """Reason indicates the reason to stop a operation"""
    def __init__(
        self,
        *,
        operation_type: temporalio.api.enums.v1.batch_operation_pb2.BatchOperationType.ValueType = ...,
        job_id: builtins.str = ...,
        state: temporalio.api.enums.v1.batch_operation_pb2.BatchOperationState.ValueType = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        close_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        total_operation_count: builtins.int = ...,
        complete_operation_count: builtins.int = ...,
        failure_operation_count: builtins.int = ...,
        identity: builtins.str = ...,
        reason: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "close_time", b"close_time", "start_time", b"start_time"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "close_time",
            b"close_time",
            "complete_operation_count",
            b"complete_operation_count",
            "failure_operation_count",
            b"failure_operation_count",
            "identity",
            b"identity",
            "job_id",
            b"job_id",
            "operation_type",
            b"operation_type",
            "reason",
            b"reason",
            "start_time",
            b"start_time",
            "state",
            b"state",
            "total_operation_count",
            b"total_operation_count",
        ],
    ) -> None: ...

global___DescribeBatchOperationResponse = DescribeBatchOperationResponse

class ListBatchOperationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """Namespace that contains the batch operation"""
    page_size: builtins.int
    """List page size"""
    next_page_token: builtins.bytes
    """Next page token"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        page_size: builtins.int = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "namespace",
            b"namespace",
            "next_page_token",
            b"next_page_token",
            "page_size",
            b"page_size",
        ],
    ) -> None: ...

global___ListBatchOperationsRequest = ListBatchOperationsRequest

class ListBatchOperationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_INFO_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operation_info(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        temporalio.api.batch.v1.message_pb2.BatchOperationInfo
    ]:
        """BatchOperationInfo contains the basic info about batch operation"""
    next_page_token: builtins.bytes
    def __init__(
        self,
        *,
        operation_info: collections.abc.Iterable[
            temporalio.api.batch.v1.message_pb2.BatchOperationInfo
        ]
        | None = ...,
        next_page_token: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "next_page_token", b"next_page_token", "operation_info", b"operation_info"
        ],
    ) -> None: ...

global___ListBatchOperationsResponse = ListBatchOperationsResponse

class PollWorkflowExecutionUpdateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    UPDATE_REF_FIELD_NUMBER: builtins.int
    IDENTITY_FIELD_NUMBER: builtins.int
    WAIT_POLICY_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    """The namespace of the workflow execution to which the update was
    originally issued.
    """
    @property
    def update_ref(self) -> temporalio.api.update.v1.message_pb2.UpdateRef:
        """The update reference returned in the initial
        UpdateWorkflowExecutionResponse
        """
    identity: builtins.str
    """The identity of the worker/client who is polling this update outcome"""
    @property
    def wait_policy(self) -> temporalio.api.update.v1.message_pb2.WaitPolicy:
        """Describes when this poll request should return a response"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        update_ref: temporalio.api.update.v1.message_pb2.UpdateRef | None = ...,
        identity: builtins.str = ...,
        wait_policy: temporalio.api.update.v1.message_pb2.WaitPolicy | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "update_ref", b"update_ref", "wait_policy", b"wait_policy"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "identity",
            b"identity",
            "namespace",
            b"namespace",
            "update_ref",
            b"update_ref",
            "wait_policy",
            b"wait_policy",
        ],
    ) -> None: ...

global___PollWorkflowExecutionUpdateRequest = PollWorkflowExecutionUpdateRequest

class PollWorkflowExecutionUpdateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OUTCOME_FIELD_NUMBER: builtins.int
    @property
    def outcome(self) -> temporalio.api.update.v1.message_pb2.Outcome:
        """The outcome of the update if and only if the update has completed. If
        this response is being returned before the update has completed (e.g. due
        to the specification of a wait policy that only waits on
        UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ACCEPTED) then this field will
        not be set.
        """
    def __init__(
        self,
        *,
        outcome: temporalio.api.update.v1.message_pb2.Outcome | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["outcome", b"outcome"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["outcome", b"outcome"]
    ) -> None: ...

global___PollWorkflowExecutionUpdateResponse = PollWorkflowExecutionUpdateResponse
